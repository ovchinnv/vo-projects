!%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  subroutine chest_read_scalar(filename,q,nx,ny,nz,qbin &
#ifdef __PARALLEL
& , communicator &
#endif
&  )
#ifdef __PARALLEL
  __DEP_MPI
#endif
!
  use output
  use files
  __DEP_PARSER
  __IMPNONE
!
  int :: nx, ny, nz 
  float :: q(nx,ny,nz)
  int :: mx, my, mz
  int :: nblock
  bool :: qbin
#ifdef __PARALLEL
  int4mpi :: communicator, ierror, me, ncpu
#endif
  character(len=11) :: fmt
  character(len=17) , parameter :: whoami='CHEST_READ_SCALAR'
!
  bool :: bin
  bool :: q3d
! 
  int :: i, j, k
  integer :: ioerr
!
  character(len=*) :: filename
  character(len=80) :: fname
  int :: flen, fid=-1
!
  bin=qbin
  if (bin) then; fmt='UNFORMATTED'; else ; fmt='FORMATTED'; endif
!
  fname=filename
  call adjustleft(fname)
  flen=len_trim(fname)
  if (flen.gt.0) then
#ifdef __PARALLEL
   call mpi_comm_rank(communicator, me, ierror)
   if (me.eq.0) then 
#endif
    call files_open(fid, name_=fname(1:flen), form_=fmt, action_='READ')
    if (fid.lt.0) then
     call warning(whoami, 'Cannot open input file. Abort.',-1)
    endif
#ifdef __PARALLEL
   endif ! me
#endif
   if (fatal_warning(__COMM)) return
  else
   call warning(whoami, 'Input file name not specified. Abort.',0)
   return
  endif
!
  q3d=(nz.gt.3)
  mx=nx; my=ny; mz=nz ! initialize
!
#ifdef __PARALLEL
  if (me.eq.0) then ! may change parallel behavior in the future
#endif
!************** header *******
!
  if (bin) then 
   if (q3d) then 
    read(fid, IOSTAT=ioerr) mx, my, mz
   else
    read(fid, IOSTAT=ioerr) mx, my
   endif ! q3d
  else ! qbin
   if (q3d) then 
    read(fid,*, IOSTAT=ioerr) mx, my, mz
   else
    read(fid,*, IOSTAT=ioerr) mx, my
   endif ! q3d
  endif ! qbin
!
  if (ioerr.ne.0) then 
   call warning(whoami, 'Error encountered while reading file "'//fname(1:flen)//'.',-1)
  else
!********* read scalar *******
! note: will implement error control, in case file is corrupted
  if (nx.ne.mx.or.ny.ne.my.or.nz.ne.mz) then
!write(0,*) nx,mx,ny,my,nz,mz ! aa
    call warning(whoami, 'Mismatch in the domain size. Abort', -1)
  else
   if (q3d) then 
    if (qbin) then  ; read(fid, IOSTAT=ioerr) q ; else ; read(fid,*, IOSTAT=ioerr) q ; endif
   else
    if (qbin) then  ; read(fid, IOSTAT=ioerr) q(:,:,2) ; else ; read(fid,*, IOSTAT=ioerr) q(:,:,2) ; endif
   endif
  endif ! nx==mx
!
  if (ioerr.ne.0) call warning(whoami, 'Error encountered while reading file "'//fname(1:flen)//'.',-1)
!
  endif ! ioerr
!
  call files_close(fid)
!
#ifdef __PARALLEL
  endif ! me.eq.0
#endif
!
  if (.not.fatal_warning(__COMM)) then 
   if (bin) then ; call message(whoami, 'Binary scalar file "'//fname(1:flen)//'" read.')
   else          ; call message(whoami,  'ASCII scalar file "'//fname(1:flen)//'" read.')
   endif
#ifdef PARALLEL
   call mpi_comm_size(communicator, ncpu, ierror)
   if (ncpu.gt.1) then
    if (q3d) then ; MPI_BCAST(q,nx*ny*nz,mpi_float,0,communicator,bug)
    else call MPI_BCAST(q(:,:,2),nx*ny,mpi_float,0,communicator,bug)
    endif ! q3d
   endif ! ncpu
#endif
!
  endif ! fatal_warning
!
  end subroutine chest_read_scalar
