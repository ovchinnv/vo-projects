#//concat and stringify macros defined at root level*/
#define __MYNAME __CONCAT(OBJECT_,__N)

#ifndef __BODY0 
#define __BODY0
#endif

#ifndef __BODY1 
#define __BODY1
#endif

#ifndef __ARGS 
#define __ARGS
#endif

#ifndef __VARS 
#define __VARS
#endif

#ifdef __FUNCTION
#ifdef __SUBROUTINE
#error "__FUNCTION and __SUBROUTINE cannot both be set."
#endif
#define __F function
#ifndef __ASSIGN
#define __ASSIGN =
#endif
#define ___ASSIGN __MYNAME __ASSIGN
#elif defined (__SUBROUTINE)
#define __F subroutine
#define ___ASSIGN call
#endif

__F __MYNAME ( __ARGS )
 __IMPNONE
 __VARS
#ifdef __FUNCTION
 __TYPE :: __MYNAME ; __MYNAME=__INITVAL ;
#endif
!
 if (.not.object_initialized) call object_init()
 if (.not.object_initialized) then 
  call error(__STRING(__MYNAME) ,'NO OBJECTS ARE DEFINED.',0);
  return
 endif
! ======= body 1 ========
 __BODY0
!
#define __CASE(__VAL) case( __CONCAT(type_,__VAL) ); ___ASSIGN __CONCAT3(__VAL,_,__N)( __ARGS )
 select case(object_type)
  __CASE(molecule)
  case default;   call error(__STRING(__MYNAME) ,'INTERNAL ERROR: UNKNOWN OBJECT TYPE.',-1);
 end select
! ======= body 2 ========
 __BODY1
!
end __F __MYNAME
!
#undef __MYNAME
#undef __TYPE
#undef __INITVAL
#undef __ARGS
#undef __VARS
#undef __N
#undef __BODY0
#undef __BODY1
#undef __CASE
#undef __ASSIGN
#undef ___ASSIGN
#undef __F
