#ifdef __TIMER
 mgtime=timer_stamp(mgtimer)
#endif
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#ifdef __CUDA
 if(qusecuda) then
  call ApplyBC_Cuda(CUallp,CUallwest,CUalleast,CUallnorth,CUallsouth,CUallfront,CUallback,i3b,i2,j2,k2,nnx+2,nny+2,nnz+2,bc_type,bc_wgt(:,level),i2d)
 else ! comment if you want BC to be applied to both, device and local arrays
#endif
  nnx=nnx+2;  nny=nny+2;  nnz=nnz+2;
  call apply_bc_dnp(allp(i3b),allwest (i2),nnx, nny, nnz, west,  bc_type(west),  bc_wgt(west,level),  q2d)
  call apply_bc_dnp(allp(i3b),alleast (i2),nnx, nny, nnz, east,  bc_type(east),  bc_wgt(east,level),  q2d)
  call apply_bc_dnp(allp(i3b),allsouth(j2),nnx, nny, nnz, south, bc_type(south), bc_wgt(south,level), q2d) 
  call apply_bc_dnp(allp(i3b),allnorth(j2),nnx, nny, nnz, north, bc_type(north), bc_wgt(north,level), q2d)
  if (.not.q2d) then 
   call apply_bc_dnp(allp(i3b),allfront(k2),nnx, nny, nnz, front, bc_type(front), bc_wgt(front,level), q2d)
   call apply_bc_dnp(allp(i3b),allback (k2),nnx, nny, nnz, back,  bc_type(back),  bc_wgt(back,level),  q2d)
  endif
  nnx=nnx-2;  nny=nny-2;  nnz=nnz-2;
#ifdef __CUDA
 endif ! qusecuda
#endif
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#ifdef __TIMER
#ifdef __INSIDESMOOTHER
 smooth_time=smooth_time+bc_time ! subtract the BC time from smoother time
#endif
 __INCR(bc_time, timer_elapsed(mgtimer))
#ifdef __INSIDESMOOTHER
 smooth_time=smooth_time-bc_time
#endif
#endif
