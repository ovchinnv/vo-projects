#!/bin/bash
# 2D test case for chest
# V. Ovchinnikov 2011
# Numerical solution to the poisson equation in two dimensions (known analytical solution)
#
# u = ( 1 - exp (-ax) ) * cos (2*pi*n*y)
a=5; n=1;
#
# Requires a fortran compiler
FC=gfortran
#
echo
echo " ************************************************************************"
echo " Two-dimensional test case of the Poisson equation solution using CHEST:" 
echo " Laplacian U  = f"
echo " U = ( 1 - exp (-$a * x) ) * cos (2 * pi * $n * y); dirichlet boundary conditions"
echo " ************************************************************************"
#
#
nx=130; ny=162
xstretch=1.01; x0=0; x1=1
ystretch=0.99; y0=0; y1=2
#
#
echo "Generating test data..."
echo " \
  real*8 :: x1($nx), y1($ny)
  real*8 :: x2($nx), y2($ny)
  real*8 :: xbc0($ny), xbc1($ny)
  real*8 :: ybc0($nx), ybc1($nx)
  real*8 :: rhs($nx,$ny), u($nx,$ny)
  real*8, parameter :: err = 1d-12
  real*8 :: a, b, l, z, pi
!
! xgrid:
  a=$x0; b=$x1; z=$xstretch; n=$nx-1
  l=b-a 
  if (ABS(z-1.0d0).lt.ERR) then 
   delta=l/(n-1) 
  else 
   delta=l*(1.0d0-z)/(1.0d0-(z**(n-1)))
  endif
!
  x1(1)=a
  do i=2,n+1
   x1(i)=x1(i-1)+delta;
   delta=delta*z;
  enddo
!
  open(1,file='xg_test.dat',form='formatted', status='unknown')
  write(1,'(F30.15)') x1 
  close(1)
!
  x2(2:$nnx)=0.5d0*(x1(1:$nx-1)+x1(2:$nx)); x2(1)=x2(2)-0.5d0*(x1(2)-x1(1)); 
!
! ygrid:
  a=$y0; b=$y1; z=$ystretch; n=$ny-1
  l=b-a 
  if (ABS(z-1.0d0).lt.ERR) then 
   delta=l/(n-1) 
  else 
   delta=l*(1.0d0-z)/(1.0d0-(z**(n-1)))
  endif
!
  y1(1)=a
  do i=2,n+1
   y1(i)=y1(i-1)+delta;
   delta=delta*z;
  enddo
!
  open(1,file='yg_test.dat',form='formatted', status='unknown')
  write(1,'(F30.15)') y1 
  close(1)
!
  y2(2:n)=0.5d0*(y1(1:$ny-1)+y1(2:$ny)); y2(1)=y2(2)-0.5d0*(y1(2)-y1(1)); 
!
! data arrays
!
 pi=atan(1d0)*4d0
 do i=1,$nx ; do j=1, $ny
  u(i,j) = (1-exp (-$a*x2(i)))*cos(2*pi*n*y2(j))
  rhs(i,j) = -$a**2 * exp(-$a*x2(i))*cos(2*pi*n*y2(j)) - (2*pi*n)**2 * u(i,j)
 enddo; enddo
 open(1,file='uexact_test.dat',form='formatted', status='unknown')
 write(1,'(${nx}F30.15)') u 
 close(1)
 open(1,file='rhs_test.dat',form='formatted', status='unknown')
 write(1,'(${nx}F30.15)') rhs 
 close(1)
! bc arrays
 xbc0= (1-exp (-$a*x2(1)))  *cos(2*pi*n*y2(:))
 xbc1= (1-exp (-$a*x2($nx)))*cos(2*pi*n*y2(:))
 ybc0= (1-exp (-$a*x2(:)))  *cos(2*pi*n*y2(1))
 ybc1= (1-exp (-$a*x2(:)))  *cos(2*pi*n*y2($ny))
!
 open(10,file='xbc0_test.dat',form='formatted', status='unknown')
 open(11,file='xbc1_test.dat',form='formatted', status='unknown')
 open(12,file='ybc0_test.dat',form='formatted', status='unknown')
 open(13,file='ybc1_test.dat',form='formatted', status='unknown')
!
 write(10,'(${ny}F30.15)') xbc0; close(10)
 write(11,'(${ny}F30.15)') xbc1; close(11)
 write(12,'(${nx}F30.15)') ybc0; close(11)
 write(13,'(${nx}F30.15)') ybc1; close(11)
!
end " > test.F90

$FC -O2 test.F90 -o test ; ./test; rm -f test;
#
# prepare input file for CHES
#
echo "\
nx=130; ny=162
xgrid=exp; xstretch=1.01; x0=0; x1=1
ygrid=exp; ystretch=0.99; y0=0; y1=2


