! macro only for use with bestfit.ftn
       __A=__RR
       if (qdouble) then
        call dsyev('V','L',3,__A,3,__MU,wlpk,size(wlpk),errlpk)
       elseif (qsingle) then
        call ssyev('V','L',3,__A,3,__MU,wlpk,size(wlpk),errlpk)
       else
        __WARN(whoami, 'Cannot find compatible LAPACK diagonalization routine for kind "',kind(wlpk),'". Aborting');
        return
       endif
! make sure eigenvalues are sorted by decreasing magnitude
       if (abs(__MU(1)).lt.abs(__MU(2))) then;
        wlpk(1)=__MU(1); __MU(1)=__MU(2); __MU(2)=wlpk(1); 
        wlpk(1:3)=__A(:,1); __A(:,1)=__A(:,2); __A(:,2)=wlpk(1:3); 
       endif
       if (abs(__MU(1)).lt.abs(__MU(3))) then;
        wlpk(1)=__MU(1); __MU(1)=__MU(3); __MU(3)=wlpk(1); 
        wlpk(1:3)=__A(:,1); __A(:,1)=__A(:,3); __A(:,3)=wlpk(1:3); 
       endif
       if (abs(__MU(2)).lt.abs(__MU(3))) then;
        wlpk(1)=__MU(2); __MU(2)=__MU(3); __MU(3)=wlpk(1); 
        wlpk(1:3)=__A(:,2); __A(:,2)=__A(:,3); __A(:,3)=wlpk(1:3); 
       endif
       __A(:,3)=veccross3(__A(:,1),__A(:,2)) ! make sure to have det(_A) = 1
#undef __A
#undef __RR
#undef __MU