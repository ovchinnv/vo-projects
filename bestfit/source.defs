#ifdef __ERRTOL
#undef __ERRTOL
#endif

#ifdef __CHARMM
#define __DEPMOD __DEP_NUMBER, only : RSMALL; use chm_kinds
#define __DEBUG .false.
#define __CHKDET .true.
#define __DETFAILTRACE .true.
#define __ERRTOL RSMALL*50
#define __DBGCOMM !


#else
#define __DEPMOD use constants, only : errtol; __DEP_OUTPUT
#//define __DEBUG .true.
#define __DEBUG .false.
#define __CHKDET .true.
#define __DETFAILTRACE .true.
#define __ERRTOL ERRTOL()*50
#define __DBGCOMM !
#endif

#define __DEBUG_OUT(__FMT,...) write(666,__FMT) __VA_ARGS__

#if defined(__BINDC)
#define __FCFLOAT c_double 
#define __CFLOAT double 
#define __CFLOATFMT "%lf"
#define __FCINT c_int
#define __CINT int
#define __CINTFMT "%d"
#define __FCBOOL c_bool
#define __CBOOL _Bool
#//remove other dependencies from libraries
#ifdef __DEPMOD
#undef __DEPMOD
#endif
#define __DEPMOD
#ifdef __WRN
#undef __WRN
#endif
#define __WRN(__WHO,__MSG) write(0,*) 'WARNING FROM: ',__WHO,': ',__MSG
#ifdef __ERRTOL
#undef __ERRTOL
#endif
#define __ERRTOL 1d-12
#endif
#//define __CPLUSPLUS

#// 3x3 matrix macros -- they make no difference

#define ___MATMUL33(C,A,B) C=matmul(A,B);
#define ___MATMUL33T(C,A,B) C=matmul(A,transpose(B));
#define ___MATMUL3T3(C,A,B) C=matmul(transpose(A),B);
#define __MATMUL33(C,A,B) ___MATMUL33(C,A,B);
#define __MATMUL33T(C,A,B) ___MATMUL33T(C,A,B);
#define __MATMUL3T3(C,A,B) ___MATMUL3T3(C,A,B);
#define __DECLARE_MATMUL33_VARS

#ifndef __MATMUL33
#define __DECLARE_MATMUL33_VARS float, pointer, dimension(:,:) :: A_, B_, C_
#define ___MATMUL33(C,A,B) \
 C(1,1)=A(1,1)*B(1,1)+A(1,2)*B(2,1)+A(1,3)*B(3,1);\
 C(2,1)=A(2,1)*B(1,1)+A(2,2)*B(2,1)+A(2,3)*B(3,1);\
 C(3,1)=A(3,1)*B(1,1)+A(3,2)*B(2,1)+A(3,3)*B(3,1);\
 C(1,2)=A(1,1)*B(1,2)+A(1,2)*B(2,2)+A(1,3)*B(3,2);\
 C(2,2)=A(2,1)*B(1,2)+A(2,2)*B(2,2)+A(2,3)*B(3,2);\
 C(3,2)=A(3,1)*B(1,2)+A(3,2)*B(2,2)+A(3,3)*B(3,2);\
 C(1,3)=A(1,1)*B(1,3)+A(1,2)*B(2,3)+A(1,3)*B(3,3);\
 C(2,3)=A(2,1)*B(1,3)+A(2,2)*B(2,3)+A(2,3)*B(3,3);\
 C(3,3)=A(3,1)*B(1,3)+A(3,2)*B(2,3)+A(3,3)*B(3,3);
#define __MATMUL33(C,A,B) C_=>C; A_=>A; B_=>B ; ___MATMUL33(C_,A_,B_);
#define ___MATMUL33T(C,A,B) \
 C(1,1)=A(1,1)*B(1,1)+A(1,2)*B(1,2)+A(1,3)*B(1,3);\
 C(2,1)=A(2,1)*B(1,1)+A(2,2)*B(1,2)+A(2,3)*B(1,3);\
 C(3,1)=A(3,1)*B(1,1)+A(3,2)*B(1,2)+A(3,3)*B(1,3);\
 C(1,2)=A(1,1)*B(2,1)+A(1,2)*B(2,2)+A(1,3)*B(2,3);\
 C(2,2)=A(2,1)*B(2,1)+A(2,2)*B(2,2)+A(2,3)*B(2,3);\
 C(3,2)=A(3,1)*B(2,1)+A(3,2)*B(2,2)+A(3,3)*B(2,3);\
 C(1,3)=A(1,1)*B(3,1)+A(1,2)*B(3,2)+A(1,3)*B(3,3);\
 C(2,3)=A(2,1)*B(3,1)+A(2,2)*B(3,2)+A(2,3)*B(3,3);\
 C(3,3)=A(3,1)*B(3,1)+A(3,2)*B(3,2)+A(3,3)*B(3,3);
#define __MATMUL33T(C,A,B) C_=>C; A_=>A; B_=>B ; ___MATMUL33T(C_,A_,B_);
#define ___MATMUL3T3(C,A,B) \
 C(1,1)=A(1,1)*B(1,1)+A(2,1)*B(2,1)+A(3,1)*B(3,1);\
 C(2,1)=A(1,2)*B(1,1)+A(2,2)*B(2,1)+A(3,2)*B(3,1);\
 C(3,1)=A(1,3)*B(1,1)+A(2,3)*B(2,1)+A(3,3)*B(3,1);\
 C(1,2)=A(1,1)*B(1,2)+A(2,1)*B(2,2)+A(3,1)*B(3,2);\
 C(2,2)=A(1,2)*B(1,2)+A(2,2)*B(2,2)+A(3,2)*B(3,2);\
 C(3,2)=A(1,3)*B(1,2)+A(2,3)*B(2,2)+A(3,3)*B(3,2);\
 C(1,3)=A(1,1)*B(1,3)+A(2,1)*B(2,3)+A(3,1)*B(3,3);\
 C(2,3)=A(1,2)*B(1,3)+A(2,2)*B(2,3)+A(3,2)*B(3,3);\
 C(3,3)=A(1,3)*B(1,3)+A(2,3)*B(2,3)+A(3,3)*B(3,3);
#define __MATMUL3T3(C,A,B) C_=>C; A_=>A; B_=>B ; ___MATMUL3T3(C_,A_,B_);
#endif



