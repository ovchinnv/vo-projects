
Description.

Finite-Temperature String Method (FTSM).
-----------------------------------------------------------------------------------------

Command Syntax.

STRIng FTSM [INITialize]                                                                |
            [DONE]                                                                      |
            [ADD [ORIEnt|RMSD] <atom selection>]                                        |
            [LIST]                                                                      |
            [CLEAr [ORIEnt|RMSD]]                                                       |
            [REPArametrize  [{DEFI <real>}] -
                            [{ITER <int>}] -
                            [{LINE | SPLI | BSPL | DST [{WNCT <real>}] | LIN2}]         |
            [ORIE <atom selection> {MASS}]                                              |
            [TEST [GRAD {STEP <real>}|PARA]                                             |
            [FILL {COL<int>} {COMP} ]                                                   |
            [COMM [ALLGather|HYPERcube|GATHERBroadcast]]                                |
            [PRINt [COR|DCD] {UNIT <int>} {NAME <character*>} {COL}]                    |
            [READ  [COR|DCD] {UNIT <int>} {NAME <character*>} {COL}]                    |
            [SWAP <int> <int>]                                                          |
            [COPY <int> <int>]                                                          |
            [SET  [ORIE <atom_selection>]  | -
                  [RMSD <atom_selection>]  | -
                  [KPAR <real> {ANGStrom}] | -
                  [KPRP <real> {ANGStrom}] | -
                  [KRMS <real> {ANGStrom}] | -
                  [DPRP <real> {ANGStrom} {REP <int>} ] -
                  [DRMS <real> {REP <int>} {UPPE} ] -
                  [MASS {yes|on|true|t|YES|ON|TRUE|T|no|off|false|f|NO|OFF|FALSE|F}] - |
                  [PROJ {yes|on|true|t|YES|ON|TRUE|T|no|off|false|f|NO|OFF|FALSE|F}] - |
                  [VCUT <real> {REP <int>} ] ]                                         |
            [VOROnoi [VMAP [CALC] | -
                           [PRIN [{UNIT <int>}] [NAME <character*>] ] -
                           [READ [{UNIT <int>}] [NAME <character*>] ] -
                           [CLEA] ] | -
                     [READ [UNIT <int>] [NAME <character*>] ] -
                     [PRINt[UNIT <int>] [NAME <character*>] ] ]                        |
            [DYNAmics[{REPF <int>}]  -
                     [{STAF <int>}]  -
                     [{NOPR}] -
                     [{VORO}] -
                     [{UPDA [UPDF <int>] {REPA} ] -
                     [{STAT [STAF]}] -
                     [{EVOL [EVOF <int>] -
                            [{EVOS <int>}] -
                            [{EXPO {MEMO <real>} | AVER [NAVE <int>] {MAXAVE <int>}}]}]-
                     [{RSTR [REEQ <int>]}] -
                     [{REX [REXF <int>] [REXT <real>]}]]                               |
            [STATistics [{COUNt <int>]} -
                        [{RMSD [RNAM <character*>] [{RAPP}]} ] -
                        [{ARCL [ANAM <character*>] [{AAPP}]} ] -
                        [{CURV [CVNM <character*>] [{CAPP}]} ] -
                        [{DIST [DNAM <character*>] [{DAPP}]} ] -
                        [{FREE [FENM <character*>] [{FAPP}] [{NOCV}] }] -
                        [{FORC [FCNM <character*>] [{FCAP}] }] -
                        [{CENT [CNAM <character*>] [{CEAP}] }]
                        [{REXM [RXNM <character*>] [{RXOL <character*>}]}] -
                        [{REXL [{RXNM <character*>}] [{ROFF <int>}] [{RXAP}]}] -
                        [{VORO [VNAM <character*>]} ] -
                        [{VMAP [{VNAM <character*>}]} ] -
                        [{VLOG [{VNAM <character*>}]} [{VOFF <int>}] [{VLAP}]}]

Command Description.
--------------------------------------------------------------------------

[INIT] Initialize the finite-temperature string module
--------------------------------------------------------------------------

[DONE] Finalize the finite-tenperature string module
--------------------------------------------------------------------------

[REPA] Call reparametriation (Repa) module.  The supported
reparametrization methods are the same as those descibed for the
zero-temperature string method (SM0K), except that keywords ORIE, MASS
and MOVE are not supported (similar functionality is configured by other
means described below)
--------------------------------------------------------------------------

[ADD [ORIEnt|RMSD] <atom selection>] Add a center-of-mass (COM) position
vector computed from the atom selection to the reaction set (i.e.
coordinates that define the string). ORIEnt will add to the orientation
set (groups which will define the best-fit superposition); RMSD will add
to the forcing set (groups between which the distances are computed
after alignment.  NOTE: an empty orientation set implies that best-fit
alignments will not be performed.

--------------------------------------------------------------------------

[LIST] List currently defined orientation and forcing sets.
--------------------------------------------------------------------------

[CLEAr [ORIEnt|RMSD]] Clear orientation or forcing set.
--------------------------------------------------------------------------

[ORIE <atom selection> {MASS}] Perform best-fit superposition of the
instantaneous coordinates, such that the root-mean-squared distance
(RMSD) between instantaneous coodinates of string image (i>0) and (i-1)
are minimum.  MASS speficies that mass-weighting is to be used.

--------------------------------------------------------------------------
[TEST [GRAD {STEP <real>}|PARA] Test gradients of the string restraint
potentials by finite difference if GRAD is specified; test parallel
force computation when PARA is specified. STEP sets the finite
difference interval to use with GRAD. Parallel force computation test
will work only when more than one CPU is assigned to a string image.
--------------------------------------------------------------------------

[FILL {COL<int>} {COMP} ] Calculate values of the COM positions from
instantaneous coordinates and put into string column specified by
COL<int>.  This is how an initial string is defined in the beginning of
a set of optimizations.  Omission of COL<int> will result in the main
column (#2) being populated.  Reference coordinates for statistics (see
e.g. STAT RMSD) are assumed to be in column #8.  There are currently 22
coordinate sets, which are used for various parts of the FTSM
calculations; the user should not normally need to use the columns other
than the main and the reference. COMP specified that CHARMM comparison
coordinates are to be used for computing COM positions.
--------------------------------------------------------------------------

[COMM [ALLGather|HYPERcube|GATHERBroadcast]] Specify parallel
communication scheme for gathering gradients computed in parallel. ALLG
uses MPI_allgather ; HYPER uses an internal hypercube subroutine
implemented via MPI_SendRecv ; GATHERB uses MPI_Gather to local root
followed by MPI_Bcast. This choice should not normally have a large
impact on performance. The default method is hypercube.
--------------------------------------------------------------------------

[PRINt [COR|DCD] {UNIT <int>} {NAME <character*>} {COL}]

--------------------------------------------------------------------------
[READ  [COR|DCD] {UNIT <int>} {NAME <character*>} {COL}]

--------------------------------------------------------------------------
[SWAP <int> <int>] Swap string coordinates in the specified columns.

--------------------------------------------------------------------------
[COPY <int> <int>] Copy string coordinates from the first column to the
second column.

--------------------------------------------------------------------------
[SET ORIE <atom_selection>] In addition to the ADD command for
(iteratively) defining atom groups (see above), this command is a
shortcut for defining the entire ORIEntation set, albeit with one atom
per group, i.e. the number of groups is the number of atoms in the atom
selection, and the COM position of the group is the postion of the
corresponding (single) atom in the group.

[SET RMSD <atom_selection>] Same as above, but defines the forcing group

[SET KPAR <real> {ANGStrom}] Set force constant for plane restraint
(i.e. force acting parallel to the path; see ref. [1] for definition of
restraint potentials).  ANGSstrom indicates that the distance unit in
the force constant are Angstrom.  If unspecified, the distance unit is
equal to twice the distance between adjacent string replicas.

[SET KPRP <real> {ANGStrom}] Set force constant for in-plane restraint
(i.e. force acting perpendicular to the path for limiting). This option
is used for limiting the transition tube width. ANGStrom option as
above.

[SET KRMS <real> {ANGStrom}] Set force constant for a regular RMSD
restraint, whereby the MD replica is restrained to the string image via
U = krms/2 || x - x0 ||^2 (where x includes an implicit best-fit
rotation).  This potential corresponds approximately to the behavior in
the replica path functionality. Although the free energies cannot be
computed,  the RMSD potential is useful for path equilibration. ANGStrom
option as above.

[SET DPRP <real> {ANGStrom} {REP <int>} ] Set the reference distance for
the in-plane restraint perpendicular to the path; used for limiting the
transition tube width, as the MD replica will be restrained to a
vicinity of the path.  REP allows the use of different values for
different replicas, although this flexibility is not often used.
ANGStrom option as above.

[SET DRMS <real> {REP <int>} {UPPE} ] Set the reference RMSD for the
RMSD restraint; if omitted, the default value of zero is used. If UPPE
is specified, the restraint is only active when the computed RMSD(x)
exceeds the reference value. I.e. this corresponds is a one-sided
potential.

[SET MASS {yes|on|true|t|YES|ON|TRUE|T|no|off|false|f|NO|OFF|FALSE|F}]
When set to on, all distances will be calclulated after mass-weighting
the string coordinates; best-fit superposition will also use mass
weights.  When off, uniform weights will be used.

[SET PROJection
{yes|on|true|t|YES|ON|TRUE|T|no|off|false|f|NO|OFF|FALSE|F}] When set to
on, coordinate vectors pointing from the string image to the
instantaneous MD replica are projected onto the path tangent. This
allows the imposition of restraints to the distance to the hyperplane
normal to the string.  This option should normally be on for FTSM to
allow the coputation of free energies.  The force constants
corresponding to the  parallel and perpendicular force are KPAR and KPRP
defined above.  When set to off, the MD replica is restrained to the
corresponding image using RMSD restraints (see KRMS above).

[SET VCUT <real> {REP <int>} ] Set the maximum allowed distance from the
string in the plane perpendicular to the string tangent that the
instantaneous MD replica is allowed to travel in Voronoi simulations.
This allows one to limit the transition tube width in Voronoi
calculations, and is the constrained counterpart of DPRP/KPRP above.
------------------------------------------------------------------------

[VOROnoi VMAP CALC] Compute the Voronoi map, which lists the Voronoi
cell in which each instantaneous string coordinate set resides.  In the
present implementation, the functionality is used to ascertain that each
instantaneous replica corresponds to the correct string image; i.e. MD
replica on node (i) is closest to the string image (i), in which case
the Voronoi map will consist ot two identical rows with entries 1 ... N, 
where N is the number of string images. Instantaneous coordinates and
string coordinates must be defined prior to invoking this command.

[VOROnoi VMAP PRIN [{UNIT <int>}] [NAME <character*>] ] Print Voronoi
map to file with provided NAME and (optionally) provided unit number.

[VOROnoi VMAP READ [{UNIT <int>}] [NAME <character*>] ] Read Voronoi map
from file with provided NAME and (optionally) provided unit number.

[VOROnoi VMAP CLEA] Clear the Voronoi map if it has been READ or
CALCulated.  This will force the Voronoi map to be recomputed at the
beginning of dynamics.  This option is important due to the present
CHARMM implementation of Voronoi calculations.  The integrator will
issue warnings if an MD replica is found outside its corresponding
Voronoi cell; however, each replica is technically allowed to leave its
cell for one iteration, at which point its (half-kick) momenta (the
Verlet integrator is assumed) are reversed to return it to its home
cell. In particular, is it possible that a replica will be outside of
its cell at the timestep at which the restart file is written, in which
case, the Voronoi map will be flagged as incorrect unless it is CLEARed
prior to dynamics.

[VOROnoi PRINt[{UNIT <int>}] [NAME <character*>] ] Print matrix C_ij
with the number of Voronoi crossing attempts from cell (i) to cell (j)
to file with provided NAME and (optionally) provided unit number.  This
file can be quickly postprocesed for a fast calculation of free energies
of the tessellation.

[VOROnoi READ [{UNIT <int>}] [NAME <character*>] ] Read matrix C_ij with
the number of Voronoi crossing attempts from cell (i) to cell (j) to
file with provided NAME and (optionally) provided unit number. This
command is useful for restarting a Voronoi calculation with previously
accumulated crossing statistics.

------------------------------------------------------------------------

            [DYNAmics[{REPF <int>}]  -
                     [{STAF <int>}]  -
                     [{NOPR}] -
                     [{VORO}] -
                     [{UPDA [UPDF <int>] {REPA} ] -
                     [{STAT [STAF]}] -
                     [{EVOL [EVOF <int>] -
                            [{EVOS <int>}] -
                            [{EXPO {MEMO <real>} | AVER [NAVE <int>] {MAXAVE <int>}}]}]-
                     [{RSTR [REEQ <int>]}] -
                     [{REX [REXF <int>] [REXT <real>]}]]                               |

