#define __NAME(__WHAT)  __CONCAT(minimal_system,__WHAT)

module __NAME()

 __IMPNONE

 public

 int, save :: natom =-1
 float, save, pointer, dimension(:,:) :: r=>NULL(), rcomp=>NULL(), f=>NULL()
 float, save, pointer, dimension(:) ::   m=>NULL(), q=>NULL()

 contains
  function __NAME(_getind)(line) result(ind)
  __DEP_PARSER
  __DEP_OUTPUT
  use ivector
  use parselist
!
  __IAM(__NAME(_getind))
!
  character(len=*), intent(in) :: line
  character(len=len(line)) :: lcopy, word
  int :: l
  int, pointer, dimension(:) :: ind
  type(int_vector) :: ilist
!
  nullify(ind)
  lcopy=''
  lcopy=line
  word=pop_string(lcopy)
  select case(word)
   case('')
     __WRN(whoami, 'SELECTION TEXT IS EMPTY. NOTHING DONE.')
   case('ATOMID')
    l=len_trim(lcopy)
    if(l<0) then
     __WRN(whoami, 'SELECTION TEXT IS EMPTY. NOTHING DONE.')
     return
    else ! ok
     call ilist_parse(ilist, lcopy)
     allocate(ind(ilist%last))
     ind=ilist%i(1:ilist%last)
     call int_vector_done(ilist)
    endif
   case default
    __WRN(whoami, 'ONLY SELECTIONS BEGINNING WITH "ATOMID" ARE SUPPORTED. NOTHING DONE.');
   end select
!
  end function __NAME(_getind)

end module minimal_system
