##IF STRINGM						      |	__CHARMM_ONLY##IF STRINGM
##IF PARALLEL						      |	__CHARMM_ONLY##IF PARALLEL
      use cv_base					      |	      use cv_common
      use string					      |	      __DEP_OUTPUT
!      implicit none					      |	!      __IMPNONE
      use multicom_ltm       !##MULTICOM		      |	      __DEP_MULTICOM       !__CHARMM_ONLY##MULTICOM
      character*(*) COMLYN				      |	      character(len=(*) COMLYN
      integer :: COMLEN					      |	      int :: COMLEN
      integer i, j, k					      |	      int i, j, k
      character*20 :: keyword				      |	      character(len=20 :: keyword
      character*10 :: whoami				      |	      character(len=10 :: whoami
      if (eqstwc(keyword(1:10),10,'POSI_COM_X',10)) then      |	      if (__STRNCMP(keyword(1:10),10,'POSI_COM_X',10)) then
      else if (eqstwc(keyword(1:10),10,'POSI_COM_Y',10)) then |	      else if (__STRNCMP(keyword(1:10),10,'POSI_COM_Y',10)) t
      else if (eqstwc(keyword(1:10),10,'POSI_COM_Z',10)) then |	      else if (__STRNCMP(keyword(1:10),10,'POSI_COM_Z',10)) t
      else if (eqstwc(keyword(1:8),8,'DIHE_COM',8)) then      |	      else if (__STRNCMP(keyword(1:8),8,'DIHE_COM',8)) then
      else if (eqstwc(keyword(1:9),9,'ANGLE_COM',9)) then     |	      else if (__STRNCMP(keyword(1:9),9,'ANGLE_COM',9)) then
      else if (eqstwc(keyword(1:7),7,'ANGLVEC',7)) then	      |	      else if (__STRNCMP(keyword(1:7),7,'ANGLVEC',7)) then
      else if (eqstwc(keyword(1:8),8,'DIST_COM',8)) then      |	      else if (__STRNCMP(keyword(1:8),8,'DIST_COM',8)) then
      else if (eqstwc(keyword(1:5),5,'FRAME',5)) then	      |	      else if (__STRNCMP(keyword(1:5),5,'FRAME',5)) then
      else if (eqstwc(keyword(1:10),10,'QUATERNION',10)) then |	      else if (__STRNCMP(keyword(1:10),10,'QUATERNION',10)) t
      else if (eqstwc(keyword(1:4),4,'RMSD',4)) then	      |	      else if (__STRNCMP(keyword(1:4),4,'RMSD',4)) then
      else if (eqstwc(keyword(1:5),5,'DRMSD',5)) then	      |	      else if (__STRNCMP(keyword(1:5),5,'DRMSD',5)) then
      else if (eqstwc(keyword(1:4),4,'PROJ',4)) then	      |	      else if (__STRNCMP(keyword(1:4),4,'PROJ',4)) then
      else if (eqstwc(keyword(1:5),5,'CVRMS',5)) then	      |	      else if (__STRNCMP(keyword(1:5),5,'CVRMS',5)) then
      use string					      |	      __DEP_OUTPUT
!      implicit none					      |	!      __IMPNONE
      use stream 					      |	      __DEP_PARSER 
      use multicom_ltm       !##MULTICOM		      |	      __DEP_MULTICOM       !__CHARMM_ONLY##MULTICOM
      use mpi 						      |	      __DEP_MPI 
      character*(*) comlyn				      |	      character(len=(*) comlyn
      integer :: comlen					      |	      int :: comlen
      integer :: cvtype					      |	      int :: cvtype
      character*19 :: whoami				      |	      character(len=19 :: whoami
      character*11 :: cv_name				      |	      character(len=11 :: cv_name
      integer :: i, j, imode, islct(natom), nslct	      |	      int :: i, j, imode, islct(natom), nslct
      logical :: ok					      |	      bool :: ok
      real*8 :: k, gam, w				      |	      float :: k, gam, w
      integer :: frame					      |	      int :: frame
        call wrndie(0, whoami, 'UNKNOWN CV TYPE. NOTHING DONE |	        __WRN( whoami, 'UNKNOWN CV TYPE. NOTHING DONE.')
      k=gtrmf(comlyn, comlen, 'FORC', 0.0d0)   ! can specify  |	      k=__GET_RM_F(comlyn, comlen, 'FORC', 0.0d0)   ! can spe
      w=gtrmf(comlyn, comlen, 'WEIG', -1.0d0)  ! can specify  |	      w=__GET_RM_F(comlyn, comlen, 'WEIG', -1.0d0)  ! can spe
      gam=gtrmf(comlyn, comlen, 'GAMM', 1.0d0) ! friction coe |	      gam=__GET_RM_F(comlyn, comlen, 'GAMM', 1.0d0) ! frictio
      frame=gtrmi(comlyn, comlen, 'FRAM', 0) ! coordinate fra |	      frame=__GET_RM_I(comlyn, comlen, 'FRAM', 0) ! coordinat
         if (j.le.0) call wrndie(0,whoami,                    |	         if (j.le.0) __WRN(whoami,                           
        write(outu, 664) whoami,cv_name,k,gam		      |	        write(_MSGBUF, 664) whoami,cv_name,k,gam
        write(outu, 665) whoami,cv_name,k,w,gam		      |	        write(_MSGBUF, 665) whoami,cv_name,k,w,gam
        write(outu,'(A,I3)') whoami//' RELATIVE TO LOCAL FRAM |	        write(_MSGBUF,'(A,I3)') whoami//' RELATIVE TO LOCAL F
        write(outu,'(A)') whoami//' RELATIVE TO THE ABSOLUTE  |	        write(_MSGBUF,'(A)') whoami//' RELATIVE TO THE ABSOLU
       call wrndie(0,whoami,'COULD NOT ADD CV')		      |	       __WRN(whoami,'COULD NOT ADD CV')
      use string					      |	      __DEP_OUTPUT
!      implicit none					      |	!      __IMPNONE
      use stream 					      |	      __DEP_PARSER 
      use multicom_ltm       !##MULTICOM		      |	      __DEP_MULTICOM       !__CHARMM_ONLY##MULTICOM
      use mpi 						      |	      __DEP_MPI 
      character*(*) comlyn				      |	      character(len=(*) comlyn
      integer :: comlen					      |	      int :: comlen
      character*19 :: whoami				      |	      character(len=19 :: whoami
      character*8 :: cv_name				      |	      character(len=8 :: cv_name
      integer :: i, j, atom_group, imode, islct(natom), nslct |	      int :: i, j, atom_group, imode, islct(natom), nslct
      logical :: ok					      |	      bool :: ok
      real*8 :: k, gam, w				      |	      float :: k, gam, w
      k=gtrmf(comlyn, comlen, 'FORC', 0.0d0)   ! can specify  |	      k=__GET_RM_F(comlyn, comlen, 'FORC', 0.0d0)   ! can spe
      w=gtrmf(comlyn, comlen, 'WEIG', -1.0d0)  ! can specify  |	      w=__GET_RM_F(comlyn, comlen, 'WEIG', -1.0d0)  ! can spe
      gam=gtrmf(comlyn, comlen, 'GAMM', 1.0d0) ! friction coe |	      gam=__GET_RM_F(comlyn, comlen, 'GAMM', 1.0d0) ! frictio
         if (j.le.0) call wrndie(0,whoami,                    |	         if (j.le.0) __WRN(whoami,                           
        write(outu, 664) whoami,cv_name,k,gam		      |	        write(_MSGBUF, 664) whoami,cv_name,k,gam
        write(outu, 665) whoami,cv_name,k,w,gam		      |	        write(_MSGBUF, 665) whoami,cv_name,k,w,gam
       call wrndie(0,whoami,'COULD NOT ADD CV')		      |	       __WRN(whoami,'COULD NOT ADD CV')
      use string					      |	      __DEP_OUTPUT
!      implicit none					      |	!      __IMPNONE
      use stream 					      |	      __DEP_PARSER 
      use multicom_ltm       !##MULTICOM		      |	      __DEP_MULTICOM       !__CHARMM_ONLY##MULTICOM
      use mpi 						      |	      __DEP_MPI 
      character*(*) comlyn				      |	      character(len=(*) comlyn
      integer :: comlen					      |	      int :: comlen
      character*20 :: whoami				      |	      character(len=20 :: whoami
      character*9 :: cv_name				      |	      character(len=9 :: cv_name
      integer :: i, j, atom_group, imode, islct(natom), nslct |	      int :: i, j, atom_group, imode, islct(natom), nslct
      logical :: ok					      |	      bool :: ok
      real*8 :: k, gam, w				      |	      float :: k, gam, w
      k=gtrmf(comlyn, comlen, 'FORC', 0.0d0)   ! can specify  |	      k=__GET_RM_F(comlyn, comlen, 'FORC', 0.0d0)   ! can spe
      w=gtrmf(comlyn, comlen, 'WEIG', -1.0d0)  ! can specify  |	      w=__GET_RM_F(comlyn, comlen, 'WEIG', -1.0d0)  ! can spe
      gam=gtrmf(comlyn, comlen, 'GAMM', 1.0d0) ! friction     |	      gam=__GET_RM_F(comlyn, comlen, 'GAMM', 1.0d0) ! frictio
         if (j.le.0) call wrndie(0,whoami,                    |	         if (j.le.0) __WRN(whoami,                           
        write(outu, 664) whoami,cv_name,k,gam		      |	        write(_MSGBUF, 664) whoami,cv_name,k,gam
        write(outu, 665) whoami,cv_name,k,w,gam		      |	        write(_MSGBUF, 665) whoami,cv_name,k,w,gam
       call wrndie(0,whoami,'COULD NOT ADD CV')		      |	       __WRN(whoami,'COULD NOT ADD CV')
      use string					      |	      __DEP_OUTPUT
!      implicit none					      |	!      __IMPNONE
      use stream 					      |	      __DEP_PARSER 
      use multicom_ltm       !##MULTICOM		      |	      __DEP_MULTICOM       !__CHARMM_ONLY##MULTICOM
      use mpi 						      |	      __DEP_MPI 
      character*(*) comlyn				      |	      character(len=(*) comlyn
      integer :: comlen					      |	      int :: comlen
      character*19 :: whoami				      |	      character(len=19 :: whoami
      character*8 :: cv_name				      |	      character(len=8 :: cv_name
      integer :: i, j, atom_group, imode, islct(natom), nslct |	      int :: i, j, atom_group, imode, islct(natom), nslct
      logical :: ok					      |	      bool :: ok
      real*8 :: k, gam, w				      |	      float :: k, gam, w
      k=gtrmf(comlyn, comlen, 'FORC', 0.0d0)   ! can specify  |	      k=__GET_RM_F(comlyn, comlen, 'FORC', 0.0d0)   ! can spe
      w=gtrmf(comlyn, comlen, 'WEIG', -1.0d0)  ! can specify  |	      w=__GET_RM_F(comlyn, comlen, 'WEIG', -1.0d0)  ! can spe
      gam=gtrmf(comlyn, comlen, 'GAMM', 1.0d0) ! friction coe |	      gam=__GET_RM_F(comlyn, comlen, 'GAMM', 1.0d0) ! frictio
         if (j.le.0) call wrndie(0,whoami,                    |	         if (j.le.0) __WRN(whoami,                           
        write(outu, 664) whoami,cv_name,k,gam		      |	        write(_MSGBUF, 664) whoami,cv_name,k,gam
        write(outu, 665) whoami,cv_name,k,w,gam		      |	        write(_MSGBUF, 665) whoami,cv_name,k,w,gam
       call wrndie(0,whoami,'COULD NOT ADD CV')		      |	       __WRN(whoami,'COULD NOT ADD CV')
      use string					      |	      __DEP_OUTPUT
!      implicit none					      |	!      __IMPNONE
      use stream 					      |	      __DEP_PARSER 
      use multicom_ltm       !##MULTICOM		      |	      __DEP_MULTICOM       !__CHARMM_ONLY##MULTICOM
      use mpi 						      |	      __DEP_MPI 
      character*(*) comlyn				      |	      character(len=(*) comlyn
      integer :: comlen					      |	      int :: comlen
      character*18 :: whoami				      |	      character(len=18 :: whoami
      character*8 :: cv_name				      |	      character(len=8 :: cv_name
      character*8 :: key				      |	      character(len=8 :: key
      integer :: i, ipt, j, l, imode, islct(natom), nslct     |	      int :: i, ipt, j, l, imode, islct(natom), nslct
      logical :: ok					      |	      bool :: ok
      real*8 :: k, gam, w				      |	      float :: k, gam, w
      integer :: f1, f2					      |	      int :: f1, f2
      real*8 :: p(4,3) ! for point definition		      |	      float :: p(4,3) ! for point definition
      logical :: qp1=.false., qp2=.false., qp3=.false., qp4=. |	      bool :: qp1=.false., qp2=.false., qp3=.false., qp4=.fal
      k=gtrmf(comlyn, comlen, 'FORC', 0.0d0)   ! can specify  |	      k=__GET_RM_F(comlyn, comlen, 'FORC', 0.0d0)   ! can spe
      w=gtrmf(comlyn, comlen, 'WEIG', -1.0d0)  ! can specify  |	      w=__GET_RM_F(comlyn, comlen, 'WEIG', -1.0d0)  ! can spe
      gam=gtrmf(comlyn, comlen, 'GAMM', 1.0d0) ! friction     |	      gam=__GET_RM_F(comlyn, comlen, 'GAMM', 1.0d0) ! frictio
      f1=gtrmi(comlyn, comlen,'FR1',0)			      |	      f1=__GET_RM_I(comlyn, comlen,'FR1',0)
      f2=gtrmi(comlyn, comlen,'FR2',0)			      |	      f2=__GET_RM_I(comlyn, comlen,'FR2',0)
       if (eqstwc(key(1:2),2,'P1',2)) then		      |	       if (__STRNCMP(key(1:2),2,'P1',2)) then
       elseif (eqstwc(key(1:2),2,'P2',2)) then		      |	       elseif (__STRNCMP(key(1:2),2,'P2',2)) then
       elseif (eqstwc(key(1:2),2,'P3',2)) then		      |	       elseif (__STRNCMP(key(1:2),2,'P3',2)) then
       elseif (eqstwc(key(1:2),2,'P4',2)) then		      |	       elseif (__STRNCMP(key(1:2),2,'P4',2)) then
        call wrndie(0,whoami,                                 |	        __WRN(whoami,                                        
       if (indx(comlyn, comlen, 'SELE', 4).eq.1) then ! next  |	       if (__INDX(comlyn, comlen, 'SELE', 4).eq.1) then ! nex
          if (j.le.0) call wrndie(0,whoami,                   |	          if (j.le.0) __WRN(whoami,                          
       call wrndie(0,whoami,                                  |	       __WRN(whoami,                                         
        write(outu, 664) whoami,cv_name,k,gam		      |	        write(_MSGBUF, 664) whoami,cv_name,k,gam
        write(outu, 665) whoami,cv_name,k,w,gam		      |	        write(_MSGBUF, 665) whoami,cv_name,k,w,gam
       call wrndie(0,whoami,'COULD NOT ADD CV')		      |	       __WRN(whoami,'COULD NOT ADD CV')
      use string					      |	      __DEP_OUTPUT
!      implicit none					      |	!      __IMPNONE
      use stream 					      |	      __DEP_PARSER 
      use multicom_ltm       !##MULTICOM		      |	      __DEP_MULTICOM       !__CHARMM_ONLY##MULTICOM
      use mpi 						      |	      __DEP_MPI 
      character*(*) comlyn				      |	      character(len=(*) comlyn
      integer :: comlen					      |	      int :: comlen
      character*16 :: whoami				      |	      character(len=16 :: whoami
      integer :: i, j, imode, islct(natom), nslct	      |	      int :: i, j, imode, islct(natom), nslct
      logical :: ok					      |	      bool :: ok
         if (j.le.0) call wrndie(0,whoami,                    |	         if (j.le.0) __WRN(whoami,                           
     &        write(outu, 665) whoami			      |	     &        write(_MSGBUF, 665) whoami
       call wrndie(0,whoami,'COULD NOT ADD FRAME')	      |	       __WRN(whoami,'COULD NOT ADD FRAME')
      use string					      |	      __DEP_OUTPUT
!      implicit none					      |	!      __IMPNONE
      use stream 					      |	      __DEP_PARSER 
      use multicom_ltm       !##MULTICOM		      |	      __DEP_MULTICOM       !__CHARMM_ONLY##MULTICOM
      use mpi 						      |	      __DEP_MPI 
      character*(*) comlyn				      |	      character(len=(*) comlyn
      integer :: comlen					      |	      int :: comlen
      character*21 :: whoami				      |	      character(len=21 :: whoami
      character*10 :: cv_name				      |	      character(len=10 :: cv_name
      logical :: ok					      |	      bool :: ok
      real*8 :: k, gam, w				      |	      float :: k, gam, w
      integer :: f1, f2					      |	      int :: f1, f2
      k=gtrmf(comlyn, comlen, 'FORC', 0.0d0)   ! can specify  |	      k=__GET_RM_F(comlyn, comlen, 'FORC', 0.0d0)   ! can spe
      w=gtrmf(comlyn, comlen, 'WEIG', -1.0d0)  ! can specify  |	      w=__GET_RM_F(comlyn, comlen, 'WEIG', -1.0d0)  ! can spe
      gam=gtrmf(comlyn, comlen, 'GAMM', 1.0d0) ! friction     |	      gam=__GET_RM_F(comlyn, comlen, 'GAMM', 1.0d0) ! frictio
      f1=gtrmi(comlyn, comlen, 'FRA1', 0) ! coordinate frame  |	      f1=__GET_RM_I(comlyn, comlen, 'FRA1', 0) ! coordinate f
      f2=gtrmi(comlyn, comlen, 'FRA2', 0) ! coordinate frame  |	      f2=__GET_RM_I(comlyn, comlen, 'FRA2', 0) ! coordinate f
        write(outu, 664) whoami,cv_name,k,gam		      |	        write(_MSGBUF, 664) whoami,cv_name,k,gam
        write(outu, 665) whoami,cv_name,k,w,gam		      |	        write(_MSGBUF, 665) whoami,cv_name,k,w,gam
        write(outu,'(A,I3)') whoami//' FRAME1: LOCAL FRAME #' |	        write(_MSGBUF,'(A,I3)') whoami//' FRAME1: LOCAL FRAME
        write(outu,'(A)') whoami//' FRAME1: ABSOLUTE FRAME'   |	        write(_MSGBUF,'(A)') whoami//' FRAME1: ABSOLUTE FRAME
        write(outu,'(A,I3)') whoami//' FRAME2: LOCAL FRAME #' |	        write(_MSGBUF,'(A,I3)') whoami//' FRAME2: LOCAL FRAME
        write(outu,'(A)') whoami//' FRAME2: ABSOLUTE FRAME'   |	        write(_MSGBUF,'(A)') whoami//' FRAME2: ABSOLUTE FRAME
       call wrndie(0,whoami,'COULD NOT ADD QUATERNION CV')    |	       __WRN(whoami,'COULD NOT ADD QUATERNION CV')
      use string					      |	      __DEP_OUTPUT
!      implicit none					      |	!      __IMPNONE
      use stream 					      |	      __DEP_PARSER 
      use multicom_ltm       !##MULTICOM		      |	      __DEP_MULTICOM       !__CHARMM_ONLY##MULTICOM
      use mpi 						      |	      __DEP_MPI 
      character*(*) comlyn				      |	      character(len=(*) comlyn
      integer :: comlen					      |	      int :: comlen
      character*16 :: whoami				      |	      character(len=16 :: whoami
      character*5 :: cv_name				      |	      character(len=5 :: cv_name
      logical :: ok					      |	      bool :: ok
      real*8 :: k, gam, w				      |	      float :: k, gam, w
      k=gtrmf(comlyn, comlen, 'FORC', 0.0d0)   ! can specify  |	      k=__GET_RM_F(comlyn, comlen, 'FORC', 0.0d0)   ! can spe
      w=gtrmf(comlyn, comlen, 'WEIG', -1.0d0)  ! can specify  |	      w=__GET_RM_F(comlyn, comlen, 'WEIG', -1.0d0)  ! can spe
      gam=gtrmf(comlyn, comlen, 'GAMM', 1.0d0) ! friction coe |	      gam=__GET_RM_F(comlyn, comlen, 'GAMM', 1.0d0) ! frictio
        write(outu, 664) whoami,cv_name,k,gam		      |	        write(_MSGBUF, 664) whoami,cv_name,k,gam
        write(outu, 665) whoami,cv_name,k,w,gam		      |	        write(_MSGBUF, 665) whoami,cv_name,k,w,gam
       call wrndie(0,whoami,'COULD NOT ADD CV')		      |	       __WRN(whoami,'COULD NOT ADD CV')
      use string					      |	      __DEP_OUTPUT
!      implicit none					      |	!      __IMPNONE
      use stream 					      |	      __DEP_PARSER 
      use number 					      |	      __DEP_NUMBER 
      use multicom_ltm       !##MULTICOM		      |	      __DEP_MULTICOM       !__CHARMM_ONLY##MULTICOM
      use mpi 						      |	      __DEP_MPI 
      character*(*) comlyn				      |	      character(len=(*) comlyn
      integer :: comlen					      |	      int :: comlen
      integer :: cvtype					      |	      int :: cvtype
      character*15 :: whoami				      |	      character(len=15 :: whoami
      character*5 :: cv_name				      |	      character(len=5 :: cv_name
      logical :: ok, oset				      |	      bool :: ok, oset
      real*8 :: k, gam, w, rtarget_com(3)		      |	      float :: k, gam, w, rtarget_com(3)
      real*8, pointer :: rtarget_o(:,:), rtarget_f(:,:),      |	      float, pointer :: rtarget_o(:,:), rtarget_f(:,:),      
      integer, pointer :: iatom_o(:), iatom_f(:)	      |	      int, pointer :: iatom_o(:), iatom_f(:)
      integer :: norient, nforced			      |	      int :: norient, nforced
      integer :: iselct(natom), jselct(natom)		      |	      int :: iselct(natom), jselct(natom)
      integer :: imode, i, j				      |	      int :: imode, i, j
      real*8 :: a, b					      |	      float :: a, b
      real*8, parameter :: errTol=1.0e-9		      |	      float, parameter :: errTol=1.0e-9
      logical :: use_main, use_comp, qroot, qmass, qtwo ! qtw |	      bool :: use_main, use_comp, qroot, qmass, qtwo ! qtwo: 
        call wrndie(0, whoami, 'UNKNOWN CV REQUESTED. NOTHING |	        __WRN( whoami, 'UNKNOWN CV REQUESTED. NOTHING DONE.')
      k=gtrmf(comlyn, comlen, 'FORC', 0.0d0)   ! can specify  |	      k=__GET_RM_F(comlyn, comlen, 'FORC', 0.0d0)   ! can spe
      w=gtrmf(comlyn, comlen, 'WEIG', -1.0d0)  ! can specify  |	      w=__GET_RM_F(comlyn, comlen, 'WEIG', -1.0d0)  ! can spe
      gam=gtrmf(comlyn, comlen, 'GAMM', 1.0d0) ! friction coe |	      gam=__GET_RM_F(comlyn, comlen, 'GAMM', 1.0d0) ! frictio
      i=indxa(comlyn,comlen,'ORIE') ! find the position of `O |	      i=__INDXa(comlyn,comlen,'ORIE') ! find the position of 
       j=indx(comlyn(i+1:comlen), comlen-i, 'SELE', 4)	      |	       j=__INDX(comlyn(i+1:comlen), comlen-i, 'SELE', 4)
         call wrndie(0,whoami,                                |	         __WRN(whoami,                                       
      j=indx(comlyn, comlen, 'SELE', 4)			      |	      j=__INDX(comlyn, comlen, 'SELE', 4)
       call wrndie(0,whoami, 'RMSD ATOMS NOT SPECIFIED. NOTHI |	       __WRN(whoami, 'RMSD ATOMS NOT SPECIFIED. NOTHING DONE.
      elseif (j.le.i.or..not.oset) then ! no 'orie', or first |	      elseif (j.le.i.or..not.oset) then ! no 'orie', or first
       call wrndie(0,whoami, 'RMSD ATOMS NOT SPECIFIED. NOTHI |	       __WRN(whoami, 'RMSD ATOMS NOT SPECIFIED. NOTHING DONE.
        call wrndie(0,whoami,                                 |	        __WRN(whoami,                                        
      qmass=(indxa(comlyn, comlen, 'MASS').gt.0) ! mass-weigh |	      qmass=(__INDXa(comlyn, comlen, 'MASS').gt.0) ! mass-wei
      use_main=((indxa(comlyn,comlen,'MAIN')).gt.0)	      |	      use_main=((__INDXa(comlyn,comlen,'MAIN')).gt.0)
      use_comp=((indxa(comlyn,comlen,'COMP')).gt.0)	      |	      use_comp=((__INDXa(comlyn,comlen,'COMP')).gt.0)
         call wrndie(0,whoami,                                |	         __WRN(whoami,                                       
        call wrndie(0,whoami,                                 |	        __WRN(whoami,                                        
        call wrndie(0,whoami,                                 |	        __WRN(whoami,                                        
        write(outu, 664) whoami,cv_name,k,gam		      |	        write(_MSGBUF, 664) whoami,cv_name,k,gam
        write(outu, 665) whoami,cv_name,k,w,gam		      |	        write(_MSGBUF, 665) whoami,cv_name,k,w,gam
       write(outu,103) whoami, nforced			      |	       write(_MSGBUF,103) whoami, nforced
       write(outu,100) whoami, norient			      |	       write(_MSGBUF,100) whoami, norient
       if (qmass) write(outu,102) whoami		      |	       if (qmass) write(_MSGBUF,102) whoami
         write(outu,105) whoami, 'COMP'			      |	         write(_MSGBUF,105) whoami, 'COMP'
         write(outu,105) whoami, 'MAIN'			      |	         write(_MSGBUF,105) whoami, 'MAIN'
         write(outu,104) whoami, 'COMP'			      |	         write(_MSGBUF,104) whoami, 'COMP'
         write(outu,104) whoami, 'MAIN'			      |	         write(_MSGBUF,104) whoami, 'MAIN'
       call wrndie(0,whoami,'COULD NOT ADD CV')		      |	       __WRN(whoami,'COULD NOT ADD CV')
##ENDIF							      |	__CHARMM_ONLY##ENDIF
##ENDIF							      |	__CHARMM_ONLY##ENDIF
