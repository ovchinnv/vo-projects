##IF PARALLEL						      |	__CHARMM_ONLY##IF PARALLEL
##IF STRINGM						      |	__CHARMM_ONLY##IF STRINGM
      logical ::                                              |	      bool ::                                                
      integer :: evolve_freq=0, repa_freq=0, stat_freq=0, his |	      int :: evolve_freq=0, repa_freq=0, stat_freq=0, hist_fr
      real*8 :: evolve_step=0.0d0, evolve_expo_mem=1.00d0,    |	      float :: evolve_step=0.0d0, evolve_expo_mem=1.00d0,    
!      integer, allocatable, dimension(:) ::		      |	!      int, allocatable, dimension(:) ::
      integer*4, allocatable, dimension(:) ::                 |	      mpiint, allocatable, dimension(:) ::                   
!      integer :: MPI_CV_TYPE2_, MPI_CV_TYPE3_, MPI_GRAD_TYPE |	!      int :: MPI_CV_TYPE2_, MPI_CV_TYPE3_, MPI_GRAD_TYPE_,
!      integer :: MPI_CV_TYPE2 , MPI_CV_TYPE3 , MPI_GRAD_TYPE |	!      int :: MPI_CV_TYPE2 , MPI_CV_TYPE3 , MPI_GRAD_TYPE,
      integer*4 :: MPI_CV_TYPE2_, MPI_CV_TYPE3_, MPI_GRAD_TYP |	      mpiint :: MPI_CV_TYPE2_, MPI_CV_TYPE3_, MPI_GRAD_TYPE_,
      integer*4 :: MPI_CV_TYPE2 , MPI_CV_TYPE3 , MPI_GRAD_TYP |	      mpiint :: MPI_CV_TYPE2 , MPI_CV_TYPE3 , MPI_GRAD_TYPE, 
      logical :: calc_cv_para=.false.,                        |	      bool :: calc_cv_para=.false.,                          
      real*8 :: finite_difference_d=0.000001d0		      |	      float :: finite_difference_d=0.000001d0
      real*8 :: parallel_tolerance=1.0e-13		      |	      float :: parallel_tolerance=1.0e-13
      integer, parameter :: sizeofreal=8		      |	      int, parameter :: sizeofreal=8
##ENDIF							      |	__CHARMM_ONLY##ENDIF
##ENDIF							      |	__CHARMM_ONLY##ENDIF
##IF PARALLEL						      |	__CHARMM_ONLY##IF PARALLEL
##IF STRINGM						      |	__CHARMM_ONLY##IF STRINGM
      logical, save :: smcv_initialized=.false.		      |	      bool, save :: smcv_initialized=.false.
      integer, save :: nstring=-1, mestring=-1		      |	      int, save :: nstring=-1, mestring=-1
      logical, save :: repa_initialized=.false.		      |	      bool, save :: repa_initialized=.false.
      integer, parameter :: linear=1, spline=2, bspline=3, ds |	      int, parameter :: linear=1, spline=2, bspline=3, dst=4
      integer, save :: interp_method=0			      |	      int, save :: interp_method=0
      integer, save :: iterations=1 ! maximum interpolation i |	      int, save :: iterations=1 ! maximum interpolation itera
      real*8, save  :: def=1.1d0 ! interpolation tolerance    |	      float, save  :: def=1.1d0 ! interpolation tolerance
      real*8, save  :: dst_cutoff=1.0d0 ! wavenumber truncati |	      float, save  :: dst_cutoff=1.0d0 ! wavenumber truncatio
      logical, save :: fixed_bc_0=.false., fixed_bc_1=.false. |	      bool, save :: fixed_bc_0=.false., fixed_bc_1=.false. ! 
      real*8, save, allocatable :: ds(:), curv(:) ! unavailab |	      float, save, allocatable :: ds(:), curv(:) ! unavailabl
      integer, save :: stat_iteration_counter=0 ! how many ti |	      int, save :: stat_iteration_counter=0 ! how many times 
      logical, save :: output_rmsd0=.false.,                  |	      bool, save :: output_rmsd0=.false.,                    
      integer, save, allocatable :: rex_map(:)		      |	      int, save, allocatable :: rex_map(:)
      logical, save :: stat_initialized=.false.		      |	      bool, save :: stat_initialized=.false.
      character*80, save :: cv_fname='',forces_fname='',      |	      character(len=80, save :: cv_fname='',forces_fname='', 
      integer, save :: rmsd0_funit=-1, dsdt_funit=-1, s_funit |	      int, save :: rmsd0_funit=-1, dsdt_funit=-1, s_funit=-1,
      character*80 rform, dform, sform, feform, cform, wkform |	      character(len=80 rform, dform, sform, feform, cform, wk
      character*8, save :: work_tag			      |	      character(len=8, save :: work_tag
      integer, save :: num_average_samples=0 ! number of samp |	      int, save :: num_average_samples=0 ! number of samples 
      integer, save :: cv_flen=0, forces_flen=0,              |	      int, save :: cv_flen=0, forces_flen=0,                 
!      integer, allocatable, save :: posi_islct(:) ! maintain |	!      int, allocatable, save :: posi_islct(:) ! maintains in
##ENDIF							      |	__CHARMM_ONLY##ENDIF
##ENDIF							      |	__CHARMM_ONLY##ENDIF
