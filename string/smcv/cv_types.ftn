!
!     CV_TYPES.MOD
!
!     LISTING OF COLLECTIVE VARIABLE TYPES
!
!     naming convention: type name is the same as the corresponding module name
!                        without the `cv_` prefix
__CHARMM_ONLY##IF STRINGM
      module cv_types
      __IMPNONE
! define types and names via macro
      int, parameter :: num_types=18
      character(len=10) :: cv_type_names(num_types)
!
#define __CV_TYPE(__NAME, __IND, __DESC) int, parameter::__NAME=__IND ! __DESC
!
      __CV_TYPE(posi_com_x, 4, x-com-position)
      __CV_TYPE(posi_com_y, 5, y-com-position)
      __CV_TYPE(posi_com_z, 6, z-com-position)
      __CV_TYPE(dist_com,   7, distance)
      __CV_TYPE(angle_com,  8, angle)
      __CV_TYPE(dihe_com,   9, dihedral angle)
      __CV_TYPE(anglvec,   10, angle between two vectors [possibly in different frames])
      __CV_TYPE(qcomp_1,   11, 1-component of orientation quaternion)
      __CV_TYPE(qcomp_2,   12, 2-component of orientation quaternion)
      __CV_TYPE(qcomp_3,   13, 3-component of orientation quaternion)
      __CV_TYPE(qcomp_4,   14, 4-component of orientation quaternion)
      __CV_TYPE(rmsd,      15, RMS distance between a set of atoms)
      __CV_TYPE(drmsd,     16, difference in the RMSDs from two structures)
      __CV_TYPE(proj,      17, projection onto the vector connecting two reference structures; simulation structure used for orientation)
      __CV_TYPE(cvrms,     18, rtmd-like variable [currently compatibility limited to steered dynamics]: z=sqrt[ 1/N sum^N_i [z_i - z^0_i]^2 ])
! define names
!#define __CV_NAME(__NAME) cv_type_names(__NAME)=__STRING(__NAME)
       data cv_type_names/"UNKN", "UNKN", "UNKN", &
     & __STRING(posi_com_x),&
     & __STRING(posi_com_y),&
     & __STRING(posi_com_z),&
     & __STRING(dist_com),&
     & __STRING(angle_com),&
     & __STRING(dihe_com),&
     & __STRING(anglvec),&
     & __STRING(qcomp_1),&
     & __STRING(qcomp_2),&
     & __STRING(qcomp_3),&
     & __STRING(qcomp_4),&
     & __STRING(rmsd),&
     & __STRING(drmsd),&
     & __STRING(proj),&
     & __STRING(cvrms)/
!
      end module cv_types
!
__CHARMM_ONLY##ENDIF
!
