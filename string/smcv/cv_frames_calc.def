!================ FD MACRO
        xcom1=zero; ycom1=zero; zcom1=zero
        do j=1, ncom1;
         xcom1=xcom1+x1(j)*m1(j);
         ycom1=ycom1+y1(j)*m1(j);
         zcom1=zcom1+z1(j)*m1(j);
        enddo
        xcom1=xcom1*totm1;
        ycom1=ycom1*totm1;
        zcom1=zcom1*totm1;
!
        C=zero ; ! initialize correlation matrix
        do j=1, ncom1;
         x1(j)=x1(j)-xcom1;
         y1(j)=y1(j)-ycom1;
         z1(j)=z1(j)-zcom1;
!    compute mass-weighted correlation matrix
         C(1,1)=C(1,1)+x1(j)*x1(j)*m1(j);
         C(1,2)=C(1,2)+x1(j)*y1(j)*m1(j);
         C(1,3)=C(1,3)+x1(j)*z1(j)*m1(j);
!
         C(2,2)=C(2,2)+y1(j)*y1(j)*m1(j);
         C(2,3)=C(2,3)+y1(j)*z1(j)*m1(j);
!
         C(3,3)=C(3,3)+z1(j)*z1(j)*m1(j);
!
         x1(j)=x1(j)*m1(j)
         y1(j)=y1(j)*m1(j)
         z1(j)=z1(j)*m1(j)
        enddo
!      enforce symmetry
        C(2,1)=C(1,2);
        C(3,1)=C(1,3);
        C(3,2)=C(2,3);
!      diagonalize the correlation matrix to obtain coordinate frame
        call eig3s(C, mu, A1); ! eigenvectors are the principal axes (invA)
!
!     compute overlap of the new axes with the old:
       detA=A1(1,1)*(A1(2,2)*A1(3,3)-A1(2,3)*A1(3,2))+                  &
     &      A1(1,2)*(A1(2,3)*A1(3,1)-A1(2,1)*A1(3,3))+                  &
     &      A1(1,3)*(A1(2,1)*A1(3,2)-A1(2,2)*A1(3,1))
       if (detA.gt.0) A1(:,1)=-A1(:,1) ! ensure a (NO, LEFT 3.31.09 adhoc, for compat. ) right-handed coordinate frame
!
!cccc generate equivalent axes (assuming no eigenvalue degeneracy)
       do ii=1,3
        dum=A1(ii,1)
        A2(ii,1)=-dum;
        A3(ii,1)=-dum;
        A4(ii,1)= dum;
        dum=A1(ii,2)
        A2(ii,2)=-dum;
        A3(ii,2)= dum;
        A4(ii,2)=-dum;
        dum=A1(ii,3)
        A2(ii,3)= dum;
        A3(ii,3)=-dum;
        A4(ii,3)=-dum;
       enddo
!      now permute axes
       corr1=0d0; corr2=0d0; corr3=0d0; corr4=0d0;
       do ii=1,3
        do jj=1,3
         dum=frames%r(ii,jj,i)
         corr1=corr1+dum*A1(ii,jj)
         corr2=corr2+dum*A2(ii,jj)
         corr3=corr3+dum*A3(ii,jj)
         corr4=corr4+dum*A4(ii,jj)
        enddo
       enddo
! choose the best axes
       cmax=max(corr1, corr2, corr3, corr4);
       if (cmax.eq.corr2) then; A1=A2;
       elseif (cmax.eq.corr3) then; A1=A3;
       elseif (cmax.eq.corr4) then; A1=A4;
       endif
!================ FD MACRO
