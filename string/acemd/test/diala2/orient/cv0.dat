 # DATA FOR STRING METHOD IN COLLECTIVE VARIABLES (CVs)
 smcv {
 nstring =           1  # string replicas
 num_cv =           7  # CVs
 # CV1: qcomp_1   
 # CV2: qcomp_2   
 # CV3: qcomp_3   
 # CV4: qcomp_4   
 # CV5: posi_com  
 # CV6: posi_com  
 # CV7: posi_com  
 fixed_0_bc =           0  # is left (1st) endpoint fixed ?
 fixed_1_bc =           0  # is right (last) endpoint fixed ?
 } #smcv
 smcv {
 # CVx_y : Collective Variable #y corresponding to replica #x
 CV0_1 =    1.0000000000000000     
 CV0_2 =   -4.1633363423443370E-017
 CV0_3 =   -1.3877787807814457E-017
 CV0_4 =    2.1857515797307769E-016
 CV0_5 =    12.591575643893952     
 CV0_6 =   -7.7918254434373573     
 CV0_7 =   -4.5991438481114963     
 } # smcv
 smcv {
 # M_x_y = ( ... ) :  y column of metric tensor M corresponding to replica x 
 M_initialized = no
 } # smcv
 smcv {
 num_frames =            2
 # fx_y : columns of reference frame (rotation matrix) #y of replica #x in sequence
 f0_1 = (  0.76087174726402274       0.62159036752697605      -0.18627828433038532      -0.54000819462638694       0.76571425353776801       0.34938922660186428      -0.35981291520975583       0.16524859130043390      -0.91827423415964304      )
 f0_2 = (  0.76087174726402240       0.62159036752697661      -0.18627828433038512      -0.54000819462638716       0.76571425353776801       0.34938922660186444      -0.35981291520975600       0.16524859130043396      -0.91827423415964327      )
 }
 smcv {
 # Wx : weight corresponding to CV #x in a scalar product; e.g. : ( SUM_{i=1}^N Wi x cv_i x cv_i ) / SUM_{i=1}^N Wi
 W1 =    1.0000000000000000     
 W2 =    1.0000000000000000     
 W3 =    1.0000000000000000     
 W4 =    1.0000000000000000     
 W5 =    1.0000000000000000     
 W6 =    1.0000000000000000     
 W7 =    1.0000000000000000     
 } # smcv
