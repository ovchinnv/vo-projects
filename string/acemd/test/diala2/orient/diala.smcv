smcv_init {
# since we are reading predefined cv coordinates, no need to defer initialization
# unless we want a fd derivative test
 defer_init_dyna=yes
 : init maxcv=7 ! 4-component quaternion and three position components
 : add frame select atomid 1 6 7 9 end ! first diala
 : add frame select atomid 23 28 29 31 end ! second diala
 : frames fill
 : frames list
 : frames print rest name frames0.dat ! NOTE : frames should be identical
 : frames read rest name frames0.dat ! test
# orientation quaternion
 : add quaternion frame1 1 frame2 2
 : set weight 1 all
 : set force 1000 all ! much more stable in acemd
# : set force 2000 ind 1 ! sufficient to restrain angle to zero
# position variables : put second diala relative to first
 : add posi_com_x frame 1 sele atomid 23 27 28 29 31 33 37 38 39 41 end force 10 wgt 1
 : add posi_com_y frame 1 sele atomid 23 27 28 29 31 33 37 38 39 41 end force 10 wgt 1
 : add posi_com_z frame 1 sele atomid 23 27 28 29 31 33 37 38 39 41 end force 10 wgt 1
 : list
 : test grad step 0.01
# read CV coordinates
 : read name cv0.dat col dyna rest
 : read name cv1.dat col main rest
# test :
# : write name trash0.dat col dyna rest
# : write name trash1.dat col main rest
# stats
 : stat hist hnam diala2_smd.dat ! hcol finst
# dynamics
 : dyna -
    rstr reeq 100000 -  ! restrained dynamics 
    smd -               ! make sure we do not reset dyna/old set in the beginning
    hisf 10 -            ! time slices
    stat staf 10000 -   ! statistics output
}

