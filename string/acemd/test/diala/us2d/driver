#!/bin/bash 
#2D umbrella sampling using string method in CHARMM
#
# execution parameters
charmm=charmm_repo
mpirun=/usr/lib/openmpi/bin/mpirun
echo localhost > ~/nodes
nodes=1

# simulation parameters
pi=3.1415926535 ;
phis=-180
psis=-180
phie=`echo "$phis+360.0" |bc -l`
psie=`echo "$psis+360.0" |bc -l`

fbw=5 # degrees;
fbwrad=`echo "$fbw/180*$pi" |bc -l` # flat bottom region in radians

nphi=40
npsi=40


for iphi in `seq 1 $nphi`; do
 for jpsi in `seq 1 $npsi`; do

  myphi=`echo "scale=2; $phis + ( $phie - $phis ) * ( $iphi - 1 ) / ( $nphi ) " |bc -l` ; # not going up to phie in view of periodicity
  mypsi=`echo "scale=2; $psis + ( $psie - $psis ) * ( $jpsi - 1 ) / ( $npsi ) " |bc -l` ;

  phirad=`echo "$myphi/180*$pi" | bc -l` 
  psirad=`echo "$mypsi/180*$pi" | bc -l` 

# RUN SIMULATION
####################
  echo "Running window ($iphi,$jpsi) ~ ($myphi, $mypsi) ..."
#
# prepare input file from template
#
  cat template.smcv | \
  sed "s/@phirad/$phirad/g" | \
  sed "s/@psirad/$psirad/g" | \
  sed "s/@phi/$myphi/g" | \
  sed "s/@psi/$mypsi/g" | \
  sed "s/@fbw/$fbwrad/g" > us2d.smcv
 
  flag=${iphi}_${jpsi}

  cat template |\
   sed "s/diala\./us2d\./g" > ${flag}.in

  acemd ${flag}.in > ${flag}.out

 done
done

