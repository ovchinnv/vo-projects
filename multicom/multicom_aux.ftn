#ifndef __BASIC
#define __BASIC
#endif
module multicom_aux
__CHARMM_ONLY##IF MULTICOM
!  Basic communicator scheme
! 
!  MPI_COMM_LOCAL - main communicator ; in general, 
!                   not the same as MPI_COMM_WORLD
!  SIZE_LOCAL     - number of processors in corresponding communicator
!  ME_LOCAL       - rank in this communicator  
!
!  MPI_COMM_GLOBAL - global communicator (involves all nodes)
!  SIZE_GLOBAL     - number of processors in corresponding communicator
!  ME_GLOBAL       - rank in communicator
!
  __DEP_MPI ! define constants MPI_COMM_NULL, MPI_UNDEFINED
#define __DECLARE(__COMM) int4mpi, save :: MPI_COMM_ ## __COMM =MPI_COMM_NULL, ME_ ## __COMM=MPI_UNDEFINED, SIZE_ ## __COMM=MPI_UNDEFINED
#ifdef __BASIC
 __DECLARE(LOCAL)
 __DECLARE(GLOBAL)

!__CHARMM_ONLY##ENSEMBLE

!  Additional communicators
#ifdef __ENSEMBLE
  __DECLARE(ENSBL) !__CHARMM_ONLY##ENSEMBLE
#endif
#ifdef __STRING
  __DECLARE(STRNG) !__CHARMM_ONLY##STRINGM
#endif
#ifdef __DMOL
  __DECLARE(DMOL)
#endif
#endif
!
! communicator for reading and parsing input file
  __DECLARE(PARSER)

!
__CHARMM_ONLY##ENDIF
!
end module multicom_aux
