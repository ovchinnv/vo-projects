! **********************************************************************!
! This source file was was generated automatically, (specifically for !
! CHARMM) from a master source code tree, using a preprocessor. !
! If you edit this file (rather than the master source file) !
! your changes will be lost if another pull from the master tree occurs.!
! In case you are wondering why, this approach makes it possible for !
! me to have the same master source code interfaced with different !
! applications (some of which are written in a way that is quite far !
! from being object-oriented) at the source level. !
! **********************************************************************!
module multicom_aux
##IF MULTICOM
! Basic communicator scheme
!
! MPI_COMM_LOCAL - main communicator ; in general,
! not the same as MPI_COMM_WORLD
! SIZE_LOCAL - number of processors in corresponding communicator
! ME_LOCAL - rank in this communicator
!
! MPI_COMM_GLOBAL - global communicator (involves all nodes)
! SIZE_GLOBAL - number of processors in corresponding communicator
! ME_GLOBAL - rank in communicator
!
!
!
 integer*4, save :: MPI_COMM_LOCAL =-1, ME_LOCAL=-1, SIZE_LOCAL=-1
 integer*4, save :: MPI_COMM_GLOBAL =-1, ME_GLOBAL=-1, SIZE_GLOBAL=-1
!##ENSEMBLE
! Additional communicators
  integer*4, save :: MPI_COMM_ENSBL =-1, ME_ENSBL=-1, SIZE_ENSBL=-1 !##ENSEMBLE
  integer*4, save :: MPI_COMM_STRNG =-1, ME_STRNG=-1, SIZE_STRNG=-1 !##STRINGM
!
! communicator for reading and parsing input file
  integer*4, save :: MPI_COMM_PARSER =-1, ME_PARSER=-1, SIZE_PARSER=-1
!
##ENDIF
!
end module multicom_aux
