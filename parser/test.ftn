
 program test

 use output
 use parser

 float :: f
 character*11 :: me='parser-test'
 character*80 :: str
 int :: fid

! call parser_init() ! error -- declared as private
!
! test parsing a command file

 fid=99
 open(fid, file='_parser.tmp', form='formatted',status='unknown',action='write')
 write(fid, *) ' ! this is a test input file for the parser module'
 write(fid, *) ' a=5 b=10 ! simple variables '
 write(fid, *) ' _c=10 ! this is an error because parameters have to start with letters '
 write(fid, *)  ' d= (1;2;3;4;5;6;7) ! vector parameter'
 write(fid, *) ' stringpar=a_string_parameter'

 write(fid, *) ' newcontext { ! new context'
 write(fid, *) '             a=100 ; x=35'
 write(fid, *) '            }' 

 close(fid)

! reopen file for reading
 open(fid, file='_parser.tmp', form='formatted',status='old', action='read')
 call parse_file(fid)
!
! query parser
 call message(me, 'does "a" exist? : '//ltoa(existtag('a')))
 call message(me, 'does "ali-baba" exist? : '//ltoa(existtag('ali-baba')))
 call message(me, 'does "d" exist? : '//ltoa(existtag('d')))
 write(0,*) atofv(getval('d'),7)
! stop
 
 
!#####################################################
 n=20
 f=-34.978
 
 call message(me, 'Utility subroutines:')
 str='    leading blanks here...'
 l=len_trim(str)
 write(6,'(3a)') ' Before adjusting to the left: "',str(1:l),'"' 
 call adjustleft(str);l=len_trim(str);
 write(6,'(3a)') ' After:                        "',str(1:l),'"'

 write(6,*) 'int to string: ', n, itoa(n)

 write(6,*) 'string to int: ', '50' , atoi('50')

 write(6,*) 'float to string: ', f, ftoa(f)
 
 
 
 end 
 