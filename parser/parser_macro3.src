#//check all contexts
#ifdef __INT
#define __NTOA(__WHAT) itoa(__WHAT)
#define __ATON(__WHAT) atoi(__WHAT)
#elif defined(__BOOL)
#define __NTOA(__WHAT) ltoa(__WHAT)
#define __ATON(__WHAT) atol(__WHAT)
#elif defined(__CHAR)
#define __NTOA(__WHAT) trim(__WHAT) // __STRING(__WHAT)
#define __ATON(__WHAT) __WHAT
#else
#define __NTOA(__WHAT) ftoa(__WHAT)
#define __ATON(__WHAT) atof(__WHAT)
#endif // #ifdef __int
#ifndef __WHOAMI
#define __WHOAMI whoami
#endif // __WHOAMI
#ifndef __DOIFOK
#define __DOIFOK // nothing
#endif
#ifndef __DOALWAYS
#define __DOALWAYS // nothing
#endif
qctx=.false.
do ictx=1,size(contexts)
 if (existtag_nocase(__STRING(__TAG) , contexts(ictx) )) then 
  if (qctx) then 
   call warning(__WHOAMI, __STRING(__NAME)//'("'//&
&    __STRING(__TAG)//'") is present in multiple contexts. Will use last reported value.',0)
   exit
  endif
  qctx=.true.
 endif
enddo
if (.not.qctx) then
#ifdef __DEFAULT
#ifndef __DEFAULT_VAL
#define __DEFAULT_VAL __CONCAT2(default_,__VAR)
#endif // __DEFAULT_VAL
#ifdef __WARNIFMISSING
   call warning(__WHOAMI, __STRING(__NAME)//'("'//&
&    __STRING(__TAG)//'") unspecified. Defaulting to '// &
&                        trim(__NTOA( __DEFAULT_VAL ))// &
&                        '.',0)
#endif
   __VAR=__DEFAULT_VAL
   __DOALWAYS
#undef __DEFAULT_VAL
#else
#ifdef __WARNIFMISSING
   call warning(__WHOAMI, __STRING(__NAME)//'("'// &
&  __STRING(__TAG)//'") unspecified.',-1)
#endif
   __DOALWAYS
#endif
else ! qctx
   do ictx=1,size(contexts)
    if (.not.existtag_nocase(__STRING(__TAG) , contexts(ictx) )) cycle
    keyword=getval_nocase(__STRING(__TAG) , contexts(ictx) );
    l=len_trim(keyword)
    call message(__WHOAMI, 'Setting '// &
&                          __STRING(__NAME)//'("'// &
&                          __STRING(__TAG)//'") to "'//keyword(1:l)//'".');
   __VAR = __ATON(keyword)
#if !(defined __CHAR || defined __BOOL)
#if defined(__LEZEROERR)
    if ( __VAR .le. 0) then
     call warning(__WHOAMI,__STRING(__NAME)//'("'// &
&                __STRING(__TAG)//'") must be positive ("'//keyword(1:l)//'"). Abort.',-1)
    else
     __DOALWAYS
     __DOIFOK
    endif
#elif ( defined(__MINUSERR) || defined(__LTZEROERR) )
    if ( __VAR .lt. 0) then
     call warning(__WHOAMI,__STRING(__NAME)//'("'//&
&    __STRING(__TAG)//'") cannot be negative ("'//keyword(1:l)//'"). Abort.',-1)
    else
     __DOALWAYS
     __DOIFOK
    endif
#else
 __DOALWAYS
 __DOIFOK
#endif
#else
 __DOALWAYS
 __DOIFOK
#endif
  enddo ! ictx
endif
#undef __VAR
#undef __NAME
#undef __TAG
#undef __ATON
#undef __NTOA
#undef __DEFAULT_VAL
#undef __DOIFOK
#undef __DOALWAYS
