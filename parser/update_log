      implicit none					      |	      __IMPNONE
       character*200, dimension(:), pointer :: tag, val	      |	       character(len=200, dimension(:), pointer :: tag, val
       character*26, parameter  :: lower='abcdefghijklmnopqrs |	       character(len=26, parameter  :: lower='abcdefghijklmno
       character*26, parameter  :: upper='ABCDEFGHIJKLMNOPQRS |	       character(len=26, parameter  :: upper='ABCDEFGHIJKLMNO
       character*10, parameter  :: digits='0123456789'	      |	       character(len=10, parameter  :: digits='0123456789'
       character*200, parameter :: allowed=upper//lower//digi |	       character(len=200, parameter :: allowed=upper//lower//
      public atoi     	! convert string to integer 	      |	      public atoi     	! convert string to int 
      public atoiv     	! convert string to a vector of integ |	      public atoiv     	! convert string to a vector of ints 
       character*200, dimension(:), pointer :: ntag, nval     |	       character(len=200, dimension(:), pointer :: ntag, nval
       character*(*) :: newtag, newval			      |	       character(len=(*) :: newtag, newval
       character*(*) :: newtag, newval			      |	       character(len=(*) :: newtag, newval
       character*200 :: params_getval			      |	       character(len=200 :: params_getval
       character*(*) :: atag				      |	       character(len=(*) :: atag
       character*200 :: params_getval_nocase, tag1, tag2      |	       character(len=200 :: params_getval_nocase, tag1, tag2
       character*(*) :: atag				      |	       character(len=(*) :: atag
       character*(200) function getval(atag)		      |	       character(len=(200) function getval(atag)
       character*200 :: value				      |	       character(len=200 :: value
       character*(*) :: atag				      |	       character(len=(*) :: atag
       character*(200) function getval_nocase(atag)	      |	       character(len=(200) function getval_nocase(atag)
       character*200 :: value				      |	       character(len=200 :: value
       character*(*) :: atag				      |	       character(len=(*) :: atag
       character*(200) function getval_nocase_upper(atag)     |	       character(len=(200) function getval_nocase_upper(atag)
       character*200 :: value				      |	       character(len=200 :: value
       character*(*) :: atag				      |	       character(len=(*) :: atag
       character*200 :: value				      |	       character(len=200 :: value
       character*(*) :: atag				      |	       character(len=(*) :: atag
       character*200 :: value				      |	       character(len=200 :: value
       character*(*) :: atag				      |	       character(len=(*) :: atag
       character*10, parameter :: whoami = 'PARSE_FILE'	      |	       character(len=10, parameter :: whoami = 'PARSE_FILE'
       character*400 :: cmdline				      |	       character(len=400 :: cmdline
       character*200 :: tag, val			      |	       character(len=200 :: tag, val
       character*11, parameter :: whoami = 'LIST_PARAMS'      |	       character(len=11, parameter :: whoami = 'LIST_PARAMS'
       character*4, parameter :: whoami = 'ATOI'	      |	       character(len=4, parameter :: whoami = 'ATOI'
! convert string to integer				      |	! convert string to int
       character*4, parameter :: whoami = 'ATOF'	      |	       character(len=4, parameter :: whoami = 'ATOF'
       character*(*) :: a				      |	       character(len=(*) :: a
       character*200 :: b				      |	       character(len=200 :: b
       character*4, parameter :: whoami = 'ATOL'	      |	       character(len=4, parameter :: whoami = 'ATOL'
   character*((ceiling(log10(1.0*abs(i)+1.)))+1) :: itoa      |	   character(len=((ceiling(log10(1.0*abs(i)+1.)))+1) :: itoa
   character*(80) :: b 					      |	   character(len=(80) :: b 
       character*(*) :: a				      |	       character(len=(*) :: a
       character*(*) :: a				      |	       character(len=(*) :: a
        character*(*) :: a				      |	        character(len=(*) :: a
   character*(*) :: a					      |	   character(len=(*) :: a
   character*2, parameter :: space = ' '//tab		      |	   character(len=2, parameter :: space = ' '//tab
   character*(*) :: a					      |	   character(len=(*) :: a
   character*2, parameter :: space = ' '//tab		      |	   character(len=2, parameter :: space = ' '//tab
  character*2, parameter :: space = ' '//tab		      |	  character(len=2, parameter :: space = ' '//tab
  character*2, parameter :: space = ' '//tab		      |	  character(len=2, parameter :: space = ' '//tab
