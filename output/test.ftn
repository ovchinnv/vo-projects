
 program test
 use output
 __IMPNONE
! check that intended operations work

 character(len=4), parameter :: whoami='test'

 call output_init()
 write(6,*) 'output initialized : ', output_initialized
 write(6,*) 'output stream : ', fout

 call plainmessage('this is a plain message, just like writing to output')
 call plainmessage('this is a plain message too, but you might not see it', -1)

 call message(whoami, ' test message ')
 call message('from some random subroutine', ' < say something ... > ')
 
 call warning(whoami, ' something is wrong ', 0)
 write(6,*) ' (was this a fatal warning? : ',fatal_warning(),')'  

 call warning(whoami, ' something is really wrong ', -1)
 write(6,*) ' (was this a fatal warning? : ',fatal_warning(),')'  
 write(6,*) ' (Current minimum warning level is ', get_minwarnlev(),')'
 write(6,*) ' Setting minimum warning level to -5... ' ; call set_minwarnlev(-5)

 call warning(whoami, " something is really wrong but we don't care", -1)
 write(6,*) ' (was this a fatal warning? : ',fatal_warning(),')'  
 write(6,*) ' (Current minimum warning level is ', get_minwarnlev(),')'


 call message(whoami, ' from now on, redirecting output to "test.dat" ')
 call output_init('test.dat')

 call message(whoami, ' this line should be inside "test.dat" ')

 call output_done()
 call output_done() ! try again

 call message(whoami,'we have reinitialized output implicitly');

 call message(whoami,"I think we've had enough ! ... ");
 call terminate(whoami)

 end
 
