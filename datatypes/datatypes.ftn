module datatypes
use parser, only : contextnamelen
use fieldbcdef

public
!===================================== array of ptr to 2D arrays =
 type parray
  float, pointer, dimension(:,:) :: d
 end type parray
!====================================== 3D array fields =========
!
 int, parameter :: varnamelen=20
 type varray3df
   bool :: vinit ! whether this variable is initialized (allocated + has data)
   float, pointer, dimension(:,:,:) :: v
   character(len=varnamelen) :: vname
   character(len=60) :: vdescription
   character(len=contextnamelen) :: vcontext
! boundary conditions data
   bool :: vbcinit(numbc)  ! whether boundary conditions are defined for this array object
   type(parray) :: vbcs(numbc)
   int :: vbc_type(numbc)   ! boundary condition codes (see fieldbcdef)
   float :: vbc_wgt(numbc) ! weights that reflect the location of the boundary relative to gridpoints
 end type varray3df
!
!====================================== particle arrays
!
 type atomic1f
   bool :: vinit ! for scalar quantities, e.g. masses
   float, pointer, dimension(:) :: v
   character(len=varnamelen) :: vname
   character(len=60) :: vdescription
   character(len=contextnamelen) :: vcontext
 end type atomic1f
!
 type atomic2f ! for vector quantities, e.g. coordinates
   bool :: vinit
   float, pointer, dimension(:,:) :: v
   character(len=varnamelen) :: vname
   character(len=60) :: vdescription
   character(len=contextnamelen) :: vcontext
 end type atomic2f
!
end module datatypes
