#!/bin/bash
# source helper functions

# search a file for subroutine ; ouuput subroutine if present

func="[Ff][Uu][Nn][Cc][Tt][Ii][Oo][Nn]";
result="[Rr][Ee][Ss][Uu][Ll][Tt]";
subroutine="[Ss][Uu][Bb][Rr][Oo][Uu][Tt][Ii][Nn][Ee]";
recursive="[Rr][Ee][Cc][Uu][Rr][Ss][Ii][Vv][Ee]";
end="[Ee][Nn][Dd]";
type="[Tt][Yy][Pp][Ee]";
parameter="[Pp][Aa][Rr][Aa][Mm][Ee][Tt][Ee][Rr]";
BREAK="!====================================================";

function get_subroutine_from_file() {
 sub=$1
 f=$2
 lbeg=`grep -En "^\s*(${recursive}\s+)?${subroutine}\s+$sub\s*(\([A-Za-z0-9_, ]*\))?[; 	]*(!.*)*$" $f | head -n1 | awk '{ print $1 }' | sed 's/://';`
 lend=`grep -En "^\s*(${end}\s+)${subroutine}\s+$sub[; 	]*(!.*)*$" $f | head -n1 | awk '{ print $1 }' | sed 's/://';`
 echo $BREAK
 sed -n "${lbeg},${lend}p" $f
}

function get_function_from_file() {
 sub=$1
 f=$2
 lbeg=`grep -En "^\s*(${recursive}\s+)?${func}\s+${sub}\s*(\([A-Za-z0-9_, ]*\))?\s*(${result}\s*\([A-Za-z0-9_ ]+\))?[; 	]*(!.*)*$" $f | head -n1 | awk '{ print $1 }' | sed 's/://';`
 lend=`grep -En "^\s*(${end}\s+)${func}\s+$sub[; 	]*(!.*)*$" $f | head -n1 | awk '{ print $1 }' | sed 's/://';`
 echo $BREAK
 sed -n "${lbeg},${lend}p" $f
}

function get_typedef_from_file() {
 t=$1
 f=$2
 lbeg=`grep -En "^\s*${type}\s+${t}[; 	]*(!.*)*$" $f | head -n1 | awk '{ print $1 }' | sed 's/://';`
 lend=`grep -En "^\s*(${end}\s+)${type}\s+$t[; 	]*(!.*)*$" $f | head -n1 | awk '{ print $1 }' | sed 's/://';`
 echo $BREAK
 sed -n "${lbeg},${lend}p" $f
}

function get_param_from_file() {
 p=$1
 f=$2
 grep -E "${parameter}[, 	A-Za-z]*::\s*${p}.*$" $f
}


