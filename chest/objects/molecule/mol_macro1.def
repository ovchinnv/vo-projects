#define __CONCAT2(__A,__B) __CONCAT1(__A,__B)
#define __CONCAT1(__A,__B) __A##__B
#define __STRING1(__WHAT) #__WHAT
#define __STRING(__WHAT) __STRING1(__WHAT)
if (.not.existtag_nocase(__STRING(__VAR))) then 
#ifdef __DEFAULT
   call warning(whoami, __STRING(__NAME)//' unspecified. Defaulting to '// &
                         __CONCAT2(__VAR,_default_str )// '.',0)
   __VAR=__CONCAT2(__VAR,_default)
#else
#ifdef  __COMPUTE
   call warning(whoami, __STRING(__NAME)//' unspecified. Will compute from grid.',0)
   __VAR=-1
#else
   call warning(whoami, __STRING(__NAME)//' unspecified.',-1)
#endif
#endif
  else 
   keyword=getval(__STRING(__VAR));
#ifdef  __BYATOM
   select case(keyword)
    case('PDB','PQR','CHARMM','ATOMID')
    call warning(whoami, 'Atom-based parameters not yet supported. Abort.',-1)
    return
   end select
#endif
   l=len_trim(keyword)
   call message(whoami, 'Setting '// &
                        __STRING(__NAME)//' to '//keyword(1:l)//'.');
   __VAR = atof(keyword)
#ifdef __MINUSWRN
   if (__VAR .lt. 0d0) &
   call warning(whoami,__STRING(__NAME)// ' < 0 (Is this what you want?)',0)
#endif
#ifdef __MINUSERR
   if ( __VAR .lt. 0d0) &
   call warning(whoami,__STRING(__NAME)//' cannot be negative ('//keyword(1:l)//'). Abort.',-1)
#endif
endif
#undef __VAR
#undef __NAME
#undef __MINUSWRN
#undef __MINUSERR
!#undef __DEFAULT
!#undef __COMPUTE
