  PROGRAM CHES ! (Cartesian Helmholtz Equation Solver)
! 2010/2011 Victor Ovchinnikov (ovchinnv_at_georgetown_dot_edu)
! Free for academic use
! Most of the source code is distributed 
! under the GNU General Public License
! certain parts of the code are under restricted license
!
  use PBmain
#ifdef __TIMER
  use timer
  use parser, only: ftoa
  use output, only: message
#endif
  implicit none
  character(LEN=4) :: whoami='CHES'
  integer*4 :: comm ! default communicator
#ifdef __TIMER
  int :: pbtimer
  float :: time(10)
#endif
#ifdef PARALLEL
  include 'mpif.h'
  integer :: ierr
  call mpi_init(ierr)
  comm=MPI_COMM_WORLD
#else
  comm=-1
#endif
!
#ifdef __TIMER
  call timer_init()
  pbtimer=timer_start()
#endif
!
#if PARALLEL
  call PB_init(comm)
#else
  call PB_init()
#endif
#ifdef __TIMER 
 time(1)=timer_stamp(pbtimer)
#endif
! solve the Poisson-Boltzmann equation (if requested in the input file)
  call PB_solve()
#ifdef __TIMER
  time(2)=timer_stamp(pbtimer)
#endif
! output solution, or other properties (as requested in the input file)
  call PB_output()
#ifdef __TIMER
  time(3)=timer_stamp(pbtimer)
#endif
! deallocate arrays
  call PB_done()
!
#ifdef PARALLEL
  call mpi_finalize(Ierr)
#endif
!
#ifdef __TIMER
  call timer_done()
#endif
!
#ifdef __TIMER
 call message(whoami,'============= TIMING INFORMATION ==============')
 call message(whoami,'PB initialization time (s) : '//ftoa(time(1)))
 call message(whoami,'PB solution time (s)       : '//ftoa(time(2)))
 call message(whoami,'PB output time (s)         : '//ftoa(time(3)))
 call message(whoami,'PB finalization time (s)   : '//ftoa(time(4)))
 call message(whoami,'===============================================')
#endif
  end ! CHES


