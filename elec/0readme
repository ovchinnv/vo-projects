4/18 : trying fortran to see what kind of speedup is possible over MATLAB ; thus far, much faster, but not computing grid values,
since we technically do not need them in the production code

(1) machine for rho
(2) elec potential energy matches, but not gradients ; there is a mismatched factor of -2 in one of the codes
(3) the fortran version is actually correct; the x2 factor is real ; confirmed by FD and also theory ; fixed matlab
(4) works ! The problem now is that the electrostatic energy computed my FD in matlab does not converge to the "corect one" computed using Ewald mod... sad (


(5) note that with increasing filter order, it seems we need to go to higher order in inverse expansion
(6) the previous trend seems to hold : increasing poly order beyond 3 leads to greater FD errors ; still the question remains :
can we do better, which might push the 2nd order FD code into acceptable accuracy range ?

to do : try interpolating gradients from poly in elinterp ; check an actual psf/pdb system