 module corio
 __DEP_PARSER
 __DEP_OUTPUT
 __DEP_FILES
 use mol_formats
 use charmmio
 use pdbio
 use freeio
 __IMPNONE
 contains
  function corio_write(fname_,type_,r,O,B,iselection) result(ok)
  character(len=vartaglen) :: fname_, type_
  float :: r(:,:)
  float, optional, intent(in) :: O(:), B(:) ! occupancy and B-factor
  int, optional, intent(in) :: iselection(:) ! indices of atoms to be written
  bool :: ok
  character(len=len(fname_)) :: fname
  character(len=len(type_)) :: type
  character(len=11) :: frm
  int :: fid, i
  __IAM(COORIO_WRITE)
!
  ok=.false.
!
  type=type_ ; call toupper(type);
  do i=1, num_mol_format
   if (mol_format_name(i).eq.type) then ; ok=.true. ; exit ; endif
  enddo
  if (ok) then
   if (i.eq.dcd) then ; frm='UNFORMATTED' ; else ; frm='FORMATTED' ; endif
   fname=fname_;
   __FOPEN(fname, frm, 'WRITE', fid)

   call message(whoami, 'Writing coordinates in '//trim(type)//' format to file "'//trim(fname)//'".')

   select case(i)
    case(charmm) ; if (present(B)) then ; ok=ch_coor_write(fid,r,B) ; else ; ok=ch_coor_write(fid,r) ; endif
    case(free) ; ok=atomid_coor_write(fid,r)
    case(pdb) ;
     if (present(iselection)) then
      if (present(O)) then 
       if (present(B)) then ; ok=PDB_write(fid,r,O,B,iselection=iselection) ; else ; ok=PDB_write(fid,r,O=O,iselection=iselection) ; endif
      else
       if (present(B)) then ; ok=PDB_write(fid,r,B=B,iselection=iselection) ; else ; ok=PDB_write(fid,r,iselection=iselection) ; endif
      endif
     else
      if (present(O)) then 
       if (present(B)) then ; ok=PDB_write(fid,r,O,B) ; else ; ok=PDB_write(fid,r,O=O) ; endif
      else
       if (present(B)) then ; ok=PDB_write(fid,r,B=B) ; else ; ok=PDB_write(fid,r) ; endif
      endif
     endif
    case(pqr) ;
     if (present(iselection)) then
      if (present(O)) then 
       if (present(B)) then ; ok=pqr_write(fid,r,O,B,iselection=iselection) ; else ; ok=pqr_write(fid,r,O=O,iselection=iselection) ; endif
      else
       if (present(B)) then ; ok=pqr_write(fid,r,B=B,iselection=iselection) ; else ; ok=pqr_write(fid,r,iselection=iselection) ; endif
      endif
     else
      if (present(O)) then 
       if (present(B)) then ; ok=pqr_write(fid,r,O,B) ; else ; ok=pqr_write(fid,r,O=O) ; endif
      else
       if (present(B)) then ; ok=pqr_write(fid,r,B=B) ; else ; ok=pqr_write(fid,r) ; endif
      endif
     endif
    case(dcd) ;    ok=(dcd_write_frame(fid, r, .true.)==0) ! write a single frame to a trajectory file
   end select
!
   call files_close(fid,1);
!
  else
   call message(whoami, 'Format "'//trim(type)//'" is not supported. Abort.',-1)
  endif ! ok
!
  end function corio_write
!
 end module corio
