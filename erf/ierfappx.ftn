! ideas from Mike Giles's 2010 CUDA paper
! modifications found on stack exchange by user Njuffa
!
#ifdef __SINGLE
#define __PCODE e
#else
#define __PCODE d
#endif
function ierfo7(x)
 implicit none
 float ierfo7, x, t
#define a0 __CONCAT3(3.03697567,__PCODE,-10)
#define a1 __CONCAT3(2.93243101,__PCODE,-8)
#define a2 __CONCAT3(1.22150334,__PCODE,-6)
#define a3 __CONCAT3(2.84108955,__PCODE,-5)
#define a4 __CONCAT3(3.93552968,__PCODE,-4)
#define a5 __CONCAT3(3.02698812,__PCODE,-3)
#define a6 __CONCAT3(4.83185798,__PCODE,-3)
#define a7 __CONCAT3(-2.64646143,__PCODE,-1)
#define a8 __CONCAT3(8.40016484,__PCODE,-1)
!
#define b0 __CONCAT3(5.43877832,__PCODE,-9)
#define b1 __CONCAT3(1.43286059,__PCODE,-7)
#define b2 __CONCAT3(1.22775396,__PCODE,-6)
#define b3 __CONCAT3(1.12962631,__PCODE,-7)
#define b4 __CONCAT3(-5.61531961,__PCODE,-5)
#define b5 __CONCAT3(-1.47697705,__PCODE,-4)
#define b6 __CONCAT3(2.31468701,__PCODE,-3)
#define b7 __CONCAT3(1.15392562,__PCODE,-2)
#define b8 __CONCAT3(-2.32015476,__PCODE,-1)
#define b9 __CONCAT3(8.86226892,__PCODE,-1)
!
#define one __CONCAT3(1,__PCODE,0)
#//define t log((one-x)*(one+x))
#//define t log(one-x**2)
#define t log(one-x*x)
! t=log((one-x)*(one+x))
 if (abs(t) > __CONCAT3(6.125,__PCODE,0)) then
  ierfo7=(a8+(a7+(a6+(a5+(a4+(a3+(a2+(a1+(a0)*t)*t)*t)*t)*t)*t)*t)*t)*x;
 else
  ierfo7=(b9+(b8+(b7+(b6+(b5+(b4+(b3+(b2+(b1+(b0)*t)*t)*t)*t)*t)*t)*t)*t)*t)*x;
 endif
end function ierfo7
